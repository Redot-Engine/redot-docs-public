:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Redot engine sources.
.. Generator: https://github.com/redot-engine/redot/tree/3.6/doc/tools/make_rst.py.
.. XML source: https://github.com/redot-engine/redot/tree/3.6/doc/classes/CallbackTweener.xml.

.. _class_CallbackTweener:

CallbackTweener
===============

**Inherits:** :ref:`Tweener<class_Tweener>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Calls the specified method after optional delay.

.. rst-class:: classref-introduction-group

Description
-----------

**CallbackTweener** is used to call a method in a tweening sequence. See :ref:`SceneTreeTween.tween_callback<class_SceneTreeTween_method_tween_callback>` for more usage information.

\ **Note:** :ref:`SceneTreeTween.tween_callback<class_SceneTreeTween_method_tween_callback>` is the only correct way to create **CallbackTweener**. Any **CallbackTweener** created manually will not function correctly.

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-----------------------------------------------+------------------------------------------------------------------------------------------------------+
   | :ref:`CallbackTweener<class_CallbackTweener>` | :ref:`set_delay<class_CallbackTweener_method_set_delay>` **(** :ref:`float<class_float>` delay **)** |
   +-----------------------------------------------+------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_CallbackTweener_method_set_delay:

.. rst-class:: classref-method

:ref:`CallbackTweener<class_CallbackTweener>` **set_delay** **(** :ref:`float<class_float>` delay **)**

Makes the callback call delayed by given time in seconds. Example:

::

    var tween = get_tree().create_tween()
    tween.tween_callback(queue_free).set_delay(2) #this will call queue_free() after 2 seconds

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
