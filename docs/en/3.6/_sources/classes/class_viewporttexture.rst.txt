:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Redot engine sources.
.. Generator: https://github.com/redot-engine/redot/tree/3.6/doc/tools/make_rst.py.
.. XML source: https://github.com/redot-engine/redot/tree/3.6/doc/classes/ViewportTexture.xml.

.. _class_ViewportTexture:

ViewportTexture
===============

**Inherits:** :ref:`Texture<class_Texture>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Texture which displays the content of a :ref:`Viewport<class_Viewport>`.

.. rst-class:: classref-introduction-group

Description
-----------

Displays the content of a :ref:`Viewport<class_Viewport>` node as a dynamic :ref:`Texture<class_Texture>`. This can be used to mix controls, 2D, and 3D elements in the same scene.

To create a ViewportTexture in code, use the :ref:`Viewport.get_texture<class_Viewport_method_get_texture>` method on the target viewport.

.. rst-class:: classref-introduction-group

Tutorials
---------

- `GUI in 3D Demo <https://redotengine.org/asset-library/asset/127>`__

- `3D in 2D Demo <https://redotengine.org/asset-library/asset/128>`__

- `2D in 3D Demo <https://redotengine.org/asset-library/asset/129>`__

- `3D Viewport Scaling Demo <https://redotengine.org/asset-library/asset/586>`__

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +---------------------------------+--------------------------------------------------------------------+---------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`           | flags                                                              | ``0`` (overrides :ref:`Texture<class_Texture_property_flags>`)                        |
   +---------------------------------+--------------------------------------------------------------------+---------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`         | resource_local_to_scene                                            | ``true`` (overrides :ref:`Resource<class_Resource_property_resource_local_to_scene>`) |
   +---------------------------------+--------------------------------------------------------------------+---------------------------------------------------------------------------------------+
   | :ref:`NodePath<class_NodePath>` | :ref:`viewport_path<class_ViewportTexture_property_viewport_path>` | ``NodePath("")``                                                                      |
   +---------------------------------+--------------------------------------------------------------------+---------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_ViewportTexture_property_viewport_path:

.. rst-class:: classref-property

:ref:`NodePath<class_NodePath>` **viewport_path** = ``NodePath("")``

.. rst-class:: classref-property-setget

- void **set_viewport_path_in_scene** **(** :ref:`NodePath<class_NodePath>` value **)**
- :ref:`NodePath<class_NodePath>` **get_viewport_path_in_scene** **(** **)**

The path to the :ref:`Viewport<class_Viewport>` node to display. This is relative to the scene root, not to the node which uses the texture.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
