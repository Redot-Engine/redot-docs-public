:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Redot engine sources.
.. Generator: https://github.com/redot-engine/redot/tree/3.6/doc/tools/make_rst.py.
.. XML source: https://github.com/redot-engine/redot/tree/3.6/doc/classes/CPUParticles.xml.

.. _class_CPUParticles:

CPUParticles
============

**Inherits:** :ref:`GeometryInstance<class_GeometryInstance>` **<** :ref:`VisualInstance<class_VisualInstance>` **<** :ref:`CullInstance<class_CullInstance>` **<** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

CPU-based 3D particle emitter.

.. rst-class:: classref-introduction-group

Description
-----------

CPU-based 3D particle node used to create a variety of particle systems and effects.

See also :ref:`Particles<class_Particles>`, which provides the same functionality with hardware acceleration, but may not run on older devices.

\ **Note:** Unlike :ref:`Particles<class_Particles>`, the visibility rect is generated on-the-fly and doesn't need to be configured by the user.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`int<class_int>`                                 | :ref:`amount<class_CPUParticles_property_amount>`                                         | ``8``                     |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`angle<class_CPUParticles_property_angle>`                                           | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Curve<class_Curve>`                             | :ref:`angle_curve<class_CPUParticles_property_angle_curve>`                               |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`angle_random<class_CPUParticles_property_angle_random>`                             | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`angular_velocity<class_CPUParticles_property_angular_velocity>`                     | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Curve<class_Curve>`                             | :ref:`angular_velocity_curve<class_CPUParticles_property_angular_velocity_curve>`         |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`angular_velocity_random<class_CPUParticles_property_angular_velocity_random>`       | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`anim_offset<class_CPUParticles_property_anim_offset>`                               | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Curve<class_Curve>`                             | :ref:`anim_offset_curve<class_CPUParticles_property_anim_offset_curve>`                   |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`anim_offset_random<class_CPUParticles_property_anim_offset_random>`                 | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`anim_speed<class_CPUParticles_property_anim_speed>`                                 | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Curve<class_Curve>`                             | :ref:`anim_speed_curve<class_CPUParticles_property_anim_speed_curve>`                     |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`anim_speed_random<class_CPUParticles_property_anim_speed_random>`                   | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Color<class_Color>`                             | :ref:`color<class_CPUParticles_property_color>`                                           | ``Color( 1, 1, 1, 1 )``   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Gradient<class_Gradient>`                       | :ref:`color_initial_ramp<class_CPUParticles_property_color_initial_ramp>`                 |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Gradient<class_Gradient>`                       | :ref:`color_ramp<class_CPUParticles_property_color_ramp>`                                 |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`damping<class_CPUParticles_property_damping>`                                       | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Curve<class_Curve>`                             | :ref:`damping_curve<class_CPUParticles_property_damping_curve>`                           |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`damping_random<class_CPUParticles_property_damping_random>`                         | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Vector3<class_Vector3>`                         | :ref:`direction<class_CPUParticles_property_direction>`                                   | ``Vector3( 1, 0, 0 )``    |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`DrawOrder<enum_CPUParticles_DrawOrder>`         | :ref:`draw_order<class_CPUParticles_property_draw_order>`                                 | ``0``                     |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Vector3<class_Vector3>`                         | :ref:`emission_box_extents<class_CPUParticles_property_emission_box_extents>`             |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`PoolColorArray<class_PoolColorArray>`           | :ref:`emission_colors<class_CPUParticles_property_emission_colors>`                       |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`PoolVector3Array<class_PoolVector3Array>`       | :ref:`emission_normals<class_CPUParticles_property_emission_normals>`                     |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`PoolVector3Array<class_PoolVector3Array>`       | :ref:`emission_points<class_CPUParticles_property_emission_points>`                       |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Vector3<class_Vector3>`                         | :ref:`emission_ring_axis<class_CPUParticles_property_emission_ring_axis>`                 |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`emission_ring_height<class_CPUParticles_property_emission_ring_height>`             |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`emission_ring_inner_radius<class_CPUParticles_property_emission_ring_inner_radius>` |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`emission_ring_radius<class_CPUParticles_property_emission_ring_radius>`             |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`EmissionShape<enum_CPUParticles_EmissionShape>` | :ref:`emission_shape<class_CPUParticles_property_emission_shape>`                         | ``0``                     |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`emission_sphere_radius<class_CPUParticles_property_emission_sphere_radius>`         |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`bool<class_bool>`                               | :ref:`emitting<class_CPUParticles_property_emitting>`                                     | ``true``                  |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`explosiveness<class_CPUParticles_property_explosiveness>`                           | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`int<class_int>`                                 | :ref:`fixed_fps<class_CPUParticles_property_fixed_fps>`                                   | ``0``                     |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`bool<class_bool>`                               | :ref:`flag_align_y<class_CPUParticles_property_flag_align_y>`                             | ``false``                 |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`bool<class_bool>`                               | :ref:`flag_disable_z<class_CPUParticles_property_flag_disable_z>`                         | ``false``                 |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`bool<class_bool>`                               | :ref:`flag_rotate_y<class_CPUParticles_property_flag_rotate_y>`                           | ``false``                 |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`flatness<class_CPUParticles_property_flatness>`                                     | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`bool<class_bool>`                               | :ref:`fract_delta<class_CPUParticles_property_fract_delta>`                               | ``true``                  |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Vector3<class_Vector3>`                         | :ref:`gravity<class_CPUParticles_property_gravity>`                                       | ``Vector3( 0, -9.8, 0 )`` |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`hue_variation<class_CPUParticles_property_hue_variation>`                           | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Curve<class_Curve>`                             | :ref:`hue_variation_curve<class_CPUParticles_property_hue_variation_curve>`               |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`hue_variation_random<class_CPUParticles_property_hue_variation_random>`             | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`initial_velocity<class_CPUParticles_property_initial_velocity>`                     | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`initial_velocity_random<class_CPUParticles_property_initial_velocity_random>`       | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`lifetime<class_CPUParticles_property_lifetime>`                                     | ``1.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`lifetime_randomness<class_CPUParticles_property_lifetime_randomness>`               | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`linear_accel<class_CPUParticles_property_linear_accel>`                             | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Curve<class_Curve>`                             | :ref:`linear_accel_curve<class_CPUParticles_property_linear_accel_curve>`                 |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`linear_accel_random<class_CPUParticles_property_linear_accel_random>`               | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`bool<class_bool>`                               | :ref:`local_coords<class_CPUParticles_property_local_coords>`                             | ``true``                  |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Mesh<class_Mesh>`                               | :ref:`mesh<class_CPUParticles_property_mesh>`                                             |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`bool<class_bool>`                               | :ref:`one_shot<class_CPUParticles_property_one_shot>`                                     | ``false``                 |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`orbit_velocity<class_CPUParticles_property_orbit_velocity>`                         |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Curve<class_Curve>`                             | :ref:`orbit_velocity_curve<class_CPUParticles_property_orbit_velocity_curve>`             |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`orbit_velocity_random<class_CPUParticles_property_orbit_velocity_random>`           |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`preprocess<class_CPUParticles_property_preprocess>`                                 | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`radial_accel<class_CPUParticles_property_radial_accel>`                             | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Curve<class_Curve>`                             | :ref:`radial_accel_curve<class_CPUParticles_property_radial_accel_curve>`                 |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`radial_accel_random<class_CPUParticles_property_radial_accel_random>`               | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`randomness<class_CPUParticles_property_randomness>`                                 | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`scale_amount<class_CPUParticles_property_scale_amount>`                             | ``1.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Curve<class_Curve>`                             | :ref:`scale_amount_curve<class_CPUParticles_property_scale_amount_curve>`                 |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`scale_amount_random<class_CPUParticles_property_scale_amount_random>`               | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`speed_scale<class_CPUParticles_property_speed_scale>`                               | ``1.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`spread<class_CPUParticles_property_spread>`                                         | ``45.0``                  |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`tangential_accel<class_CPUParticles_property_tangential_accel>`                     | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Curve<class_Curve>`                             | :ref:`tangential_accel_curve<class_CPUParticles_property_tangential_accel_curve>`         |                           |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                             | :ref:`tangential_accel_random<class_CPUParticles_property_tangential_accel_random>`       | ``0.0``                   |
   +-------------------------------------------------------+-------------------------------------------------------------------------------------------+---------------------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +---------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                      | :ref:`convert_from_particles<class_CPUParticles_method_convert_from_particles>` **(** :ref:`Node<class_Node>` particles **)**                                                     |
   +---------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>` | :ref:`get_param<class_CPUParticles_method_get_param>` **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|                                                     |
   +---------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Curve<class_Curve>` | :ref:`get_param_curve<class_CPUParticles_method_get_param_curve>` **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|                                         |
   +---------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>` | :ref:`get_param_randomness<class_CPUParticles_method_get_param_randomness>` **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|                               |
   +---------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`   | :ref:`get_particle_flag<class_CPUParticles_method_get_particle_flag>` **(** :ref:`Flags<enum_CPUParticles_Flags>` flag **)** |const|                                              |
   +---------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                      | :ref:`restart<class_CPUParticles_method_restart>` **(** **)**                                                                                                                     |
   +---------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                      | :ref:`set_param<class_CPUParticles_method_set_param>` **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` value **)**                            |
   +---------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                      | :ref:`set_param_curve<class_CPUParticles_method_set_param_curve>` **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`Curve<class_Curve>` curve **)**                |
   +---------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                      | :ref:`set_param_randomness<class_CPUParticles_method_set_param_randomness>` **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` randomness **)** |
   +---------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                      | :ref:`set_particle_flag<class_CPUParticles_method_set_particle_flag>` **(** :ref:`Flags<enum_CPUParticles_Flags>` flag, :ref:`bool<class_bool>` enable **)**                      |
   +---------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Enumerations
------------

.. _enum_CPUParticles_DrawOrder:

.. rst-class:: classref-enumeration

enum **DrawOrder**:

.. _class_CPUParticles_constant_DRAW_ORDER_INDEX:

.. rst-class:: classref-enumeration-constant

:ref:`DrawOrder<enum_CPUParticles_DrawOrder>` **DRAW_ORDER_INDEX** = ``0``

Particles are drawn in the order emitted.

.. _class_CPUParticles_constant_DRAW_ORDER_LIFETIME:

.. rst-class:: classref-enumeration-constant

:ref:`DrawOrder<enum_CPUParticles_DrawOrder>` **DRAW_ORDER_LIFETIME** = ``1``

Particles are drawn in order of remaining lifetime.

.. _class_CPUParticles_constant_DRAW_ORDER_VIEW_DEPTH:

.. rst-class:: classref-enumeration-constant

:ref:`DrawOrder<enum_CPUParticles_DrawOrder>` **DRAW_ORDER_VIEW_DEPTH** = ``2``

Particles are drawn in order of depth.

.. rst-class:: classref-item-separator

----

.. _enum_CPUParticles_Parameter:

.. rst-class:: classref-enumeration

enum **Parameter**:

.. _class_CPUParticles_constant_PARAM_INITIAL_LINEAR_VELOCITY:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_CPUParticles_Parameter>` **PARAM_INITIAL_LINEAR_VELOCITY** = ``0``

Use with :ref:`set_param<class_CPUParticles_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles_method_set_param_curve>` to set initial velocity properties.

.. _class_CPUParticles_constant_PARAM_ANGULAR_VELOCITY:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_CPUParticles_Parameter>` **PARAM_ANGULAR_VELOCITY** = ``1``

Use with :ref:`set_param<class_CPUParticles_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles_method_set_param_curve>` to set angular velocity properties.

.. _class_CPUParticles_constant_PARAM_ORBIT_VELOCITY:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_CPUParticles_Parameter>` **PARAM_ORBIT_VELOCITY** = ``2``

Use with :ref:`set_param<class_CPUParticles_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles_method_set_param_curve>` to set orbital velocity properties.

.. _class_CPUParticles_constant_PARAM_LINEAR_ACCEL:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_CPUParticles_Parameter>` **PARAM_LINEAR_ACCEL** = ``3``

Use with :ref:`set_param<class_CPUParticles_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles_method_set_param_curve>` to set linear acceleration properties.

.. _class_CPUParticles_constant_PARAM_RADIAL_ACCEL:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_CPUParticles_Parameter>` **PARAM_RADIAL_ACCEL** = ``4``

Use with :ref:`set_param<class_CPUParticles_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles_method_set_param_curve>` to set radial acceleration properties.

.. _class_CPUParticles_constant_PARAM_TANGENTIAL_ACCEL:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_CPUParticles_Parameter>` **PARAM_TANGENTIAL_ACCEL** = ``5``

Use with :ref:`set_param<class_CPUParticles_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles_method_set_param_curve>` to set tangential acceleration properties.

.. _class_CPUParticles_constant_PARAM_DAMPING:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_CPUParticles_Parameter>` **PARAM_DAMPING** = ``6``

Use with :ref:`set_param<class_CPUParticles_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles_method_set_param_curve>` to set damping properties.

.. _class_CPUParticles_constant_PARAM_ANGLE:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_CPUParticles_Parameter>` **PARAM_ANGLE** = ``7``

Use with :ref:`set_param<class_CPUParticles_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles_method_set_param_curve>` to set angle properties.

.. _class_CPUParticles_constant_PARAM_SCALE:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_CPUParticles_Parameter>` **PARAM_SCALE** = ``8``

Use with :ref:`set_param<class_CPUParticles_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles_method_set_param_curve>` to set scale properties.

.. _class_CPUParticles_constant_PARAM_HUE_VARIATION:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_CPUParticles_Parameter>` **PARAM_HUE_VARIATION** = ``9``

Use with :ref:`set_param<class_CPUParticles_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles_method_set_param_curve>` to set hue variation properties.

.. _class_CPUParticles_constant_PARAM_ANIM_SPEED:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_CPUParticles_Parameter>` **PARAM_ANIM_SPEED** = ``10``

Use with :ref:`set_param<class_CPUParticles_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles_method_set_param_curve>` to set animation speed properties.

.. _class_CPUParticles_constant_PARAM_ANIM_OFFSET:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_CPUParticles_Parameter>` **PARAM_ANIM_OFFSET** = ``11``

Use with :ref:`set_param<class_CPUParticles_method_set_param>`, :ref:`set_param_randomness<class_CPUParticles_method_set_param_randomness>`, and :ref:`set_param_curve<class_CPUParticles_method_set_param_curve>` to set animation offset properties.

.. _class_CPUParticles_constant_PARAM_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_CPUParticles_Parameter>` **PARAM_MAX** = ``12``

Represents the size of the :ref:`Parameter<enum_CPUParticles_Parameter>` enum.

.. rst-class:: classref-item-separator

----

.. _enum_CPUParticles_Flags:

.. rst-class:: classref-enumeration

enum **Flags**:

.. _class_CPUParticles_constant_FLAG_ALIGN_Y_TO_VELOCITY:

.. rst-class:: classref-enumeration-constant

:ref:`Flags<enum_CPUParticles_Flags>` **FLAG_ALIGN_Y_TO_VELOCITY** = ``0``

Use with :ref:`set_particle_flag<class_CPUParticles_method_set_particle_flag>` to set :ref:`flag_align_y<class_CPUParticles_property_flag_align_y>`.

.. _class_CPUParticles_constant_FLAG_ROTATE_Y:

.. rst-class:: classref-enumeration-constant

:ref:`Flags<enum_CPUParticles_Flags>` **FLAG_ROTATE_Y** = ``1``

Use with :ref:`set_particle_flag<class_CPUParticles_method_set_particle_flag>` to set :ref:`flag_rotate_y<class_CPUParticles_property_flag_rotate_y>`.

.. _class_CPUParticles_constant_FLAG_DISABLE_Z:

.. rst-class:: classref-enumeration-constant

:ref:`Flags<enum_CPUParticles_Flags>` **FLAG_DISABLE_Z** = ``2``

Use with :ref:`set_particle_flag<class_CPUParticles_method_set_particle_flag>` to set :ref:`flag_disable_z<class_CPUParticles_property_flag_disable_z>`.

.. _class_CPUParticles_constant_FLAG_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`Flags<enum_CPUParticles_Flags>` **FLAG_MAX** = ``3``

Represents the size of the :ref:`Flags<enum_CPUParticles_Flags>` enum.

.. rst-class:: classref-item-separator

----

.. _enum_CPUParticles_EmissionShape:

.. rst-class:: classref-enumeration

enum **EmissionShape**:

.. _class_CPUParticles_constant_EMISSION_SHAPE_POINT:

.. rst-class:: classref-enumeration-constant

:ref:`EmissionShape<enum_CPUParticles_EmissionShape>` **EMISSION_SHAPE_POINT** = ``0``

All particles will be emitted from a single point.

.. _class_CPUParticles_constant_EMISSION_SHAPE_SPHERE:

.. rst-class:: classref-enumeration-constant

:ref:`EmissionShape<enum_CPUParticles_EmissionShape>` **EMISSION_SHAPE_SPHERE** = ``1``

Particles will be emitted in the volume of a sphere.

.. _class_CPUParticles_constant_EMISSION_SHAPE_BOX:

.. rst-class:: classref-enumeration-constant

:ref:`EmissionShape<enum_CPUParticles_EmissionShape>` **EMISSION_SHAPE_BOX** = ``2``

Particles will be emitted in the volume of a box.

.. _class_CPUParticles_constant_EMISSION_SHAPE_POINTS:

.. rst-class:: classref-enumeration-constant

:ref:`EmissionShape<enum_CPUParticles_EmissionShape>` **EMISSION_SHAPE_POINTS** = ``3``

Particles will be emitted at a position chosen randomly among :ref:`emission_points<class_CPUParticles_property_emission_points>`. Particle color will be modulated by :ref:`emission_colors<class_CPUParticles_property_emission_colors>`.

.. _class_CPUParticles_constant_EMISSION_SHAPE_DIRECTED_POINTS:

.. rst-class:: classref-enumeration-constant

:ref:`EmissionShape<enum_CPUParticles_EmissionShape>` **EMISSION_SHAPE_DIRECTED_POINTS** = ``4``

Particles will be emitted at a position chosen randomly among :ref:`emission_points<class_CPUParticles_property_emission_points>`. Particle velocity and rotation will be set based on :ref:`emission_normals<class_CPUParticles_property_emission_normals>`. Particle color will be modulated by :ref:`emission_colors<class_CPUParticles_property_emission_colors>`.

.. _class_CPUParticles_constant_EMISSION_SHAPE_RING:

.. rst-class:: classref-enumeration-constant

:ref:`EmissionShape<enum_CPUParticles_EmissionShape>` **EMISSION_SHAPE_RING** = ``5``

Particles will be emitted in a ring or cylinder.

.. _class_CPUParticles_constant_EMISSION_SHAPE_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`EmissionShape<enum_CPUParticles_EmissionShape>` **EMISSION_SHAPE_MAX** = ``6``

Represents the size of the :ref:`EmissionShape<enum_CPUParticles_EmissionShape>` enum.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_CPUParticles_property_amount:

.. rst-class:: classref-property

:ref:`int<class_int>` **amount** = ``8``

.. rst-class:: classref-property-setget

- void **set_amount** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_amount** **(** **)**

The number of particles emitted in one emission cycle (corresponding to the :ref:`lifetime<class_CPUParticles_property_lifetime>`).

\ **Note:** Changing :ref:`amount<class_CPUParticles_property_amount>` will reset the particle emission, therefore removing all particles that were already emitted before changing :ref:`amount<class_CPUParticles_property_amount>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_angle:

.. rst-class:: classref-property

:ref:`float<class_float>` **angle** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Initial rotation applied to each particle, in degrees.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_angle_curve:

.. rst-class:: classref-property

:ref:`Curve<class_Curve>` **angle_curve**

.. rst-class:: classref-property-setget

- void **set_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`Curve<class_Curve>` curve **)**
- :ref:`Curve<class_Curve>` **get_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Each particle's rotation will be animated along this :ref:`Curve<class_Curve>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_angle_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **angle_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Rotation randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_angular_velocity:

.. rst-class:: classref-property

:ref:`float<class_float>` **angular_velocity** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Initial angular velocity applied to each particle in *degrees* per second. Sets the speed of rotation of the particle.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_angular_velocity_curve:

.. rst-class:: classref-property

:ref:`Curve<class_Curve>` **angular_velocity_curve**

.. rst-class:: classref-property-setget

- void **set_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`Curve<class_Curve>` curve **)**
- :ref:`Curve<class_Curve>` **get_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Each particle's angular velocity will vary along this :ref:`Curve<class_Curve>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_angular_velocity_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **angular_velocity_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Angular velocity randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_anim_offset:

.. rst-class:: classref-property

:ref:`float<class_float>` **anim_offset** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Particle animation offset.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_anim_offset_curve:

.. rst-class:: classref-property

:ref:`Curve<class_Curve>` **anim_offset_curve**

.. rst-class:: classref-property-setget

- void **set_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`Curve<class_Curve>` curve **)**
- :ref:`Curve<class_Curve>` **get_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Each particle's animation offset will vary along this :ref:`Curve<class_Curve>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_anim_offset_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **anim_offset_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Animation offset randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_anim_speed:

.. rst-class:: classref-property

:ref:`float<class_float>` **anim_speed** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Particle animation speed.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_anim_speed_curve:

.. rst-class:: classref-property

:ref:`Curve<class_Curve>` **anim_speed_curve**

.. rst-class:: classref-property-setget

- void **set_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`Curve<class_Curve>` curve **)**
- :ref:`Curve<class_Curve>` **get_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Each particle's animation speed will vary along this :ref:`Curve<class_Curve>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_anim_speed_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **anim_speed_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Animation speed randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_color:

.. rst-class:: classref-property

:ref:`Color<class_Color>` **color** = ``Color( 1, 1, 1, 1 )``

.. rst-class:: classref-property-setget

- void **set_color** **(** :ref:`Color<class_Color>` value **)**
- :ref:`Color<class_Color>` **get_color** **(** **)**

Each particle's initial color.

\ **Note:** :ref:`color<class_CPUParticles_property_color>` multiplies the particle mesh's vertex colors. To have a visible effect on a :ref:`Material3D<class_Material3D>`, :ref:`Material3D.vertex_color_use_as_albedo<class_Material3D_property_vertex_color_use_as_albedo>` *must* be ``true``. For a :ref:`ShaderMaterial<class_ShaderMaterial>`, ``ALBEDO *= COLOR.rgb;`` must be inserted in the shader's ``fragment()`` function. Otherwise, :ref:`color<class_CPUParticles_property_color>` will have no visible effect.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_color_initial_ramp:

.. rst-class:: classref-property

:ref:`Gradient<class_Gradient>` **color_initial_ramp**

.. rst-class:: classref-property-setget

- void **set_color_initial_ramp** **(** :ref:`Gradient<class_Gradient>` value **)**
- :ref:`Gradient<class_Gradient>` **get_color_initial_ramp** **(** **)**

Each particle's initial color will vary along this :ref:`GradientTexture<class_GradientTexture>` (multiplied with :ref:`color<class_CPUParticles_property_color>`).

\ **Note:** :ref:`color_initial_ramp<class_CPUParticles_property_color_initial_ramp>` multiplies the particle mesh's vertex colors. To have a visible effect on a :ref:`Material3D<class_Material3D>`, :ref:`Material3D.vertex_color_use_as_albedo<class_Material3D_property_vertex_color_use_as_albedo>` *must* be ``true``. For a :ref:`ShaderMaterial<class_ShaderMaterial>`, ``ALBEDO *= COLOR.rgb;`` must be inserted in the shader's ``fragment()`` function. Otherwise, :ref:`color_initial_ramp<class_CPUParticles_property_color_initial_ramp>` will have no visible effect.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_color_ramp:

.. rst-class:: classref-property

:ref:`Gradient<class_Gradient>` **color_ramp**

.. rst-class:: classref-property-setget

- void **set_color_ramp** **(** :ref:`Gradient<class_Gradient>` value **)**
- :ref:`Gradient<class_Gradient>` **get_color_ramp** **(** **)**

Each particle's color will vary along this :ref:`GradientTexture<class_GradientTexture>` over its lifetime (multiplied with :ref:`color<class_CPUParticles_property_color>`).

\ **Note:** :ref:`color_ramp<class_CPUParticles_property_color_ramp>` multiplies the particle mesh's vertex colors. To have a visible effect on a :ref:`Material3D<class_Material3D>`, :ref:`Material3D.vertex_color_use_as_albedo<class_Material3D_property_vertex_color_use_as_albedo>` *must* be ``true``. For a :ref:`ShaderMaterial<class_ShaderMaterial>`, ``ALBEDO *= COLOR.rgb;`` must be inserted in the shader's ``fragment()`` function. Otherwise, :ref:`color_ramp<class_CPUParticles_property_color_ramp>` will have no visible effect.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_damping:

.. rst-class:: classref-property

:ref:`float<class_float>` **damping** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

The rate at which particles lose velocity.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_damping_curve:

.. rst-class:: classref-property

:ref:`Curve<class_Curve>` **damping_curve**

.. rst-class:: classref-property-setget

- void **set_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`Curve<class_Curve>` curve **)**
- :ref:`Curve<class_Curve>` **get_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Damping will vary along this :ref:`Curve<class_Curve>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_damping_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **damping_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Damping randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_direction:

.. rst-class:: classref-property

:ref:`Vector3<class_Vector3>` **direction** = ``Vector3( 1, 0, 0 )``

.. rst-class:: classref-property-setget

- void **set_direction** **(** :ref:`Vector3<class_Vector3>` value **)**
- :ref:`Vector3<class_Vector3>` **get_direction** **(** **)**

Unit vector specifying the particles' emission direction.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_draw_order:

.. rst-class:: classref-property

:ref:`DrawOrder<enum_CPUParticles_DrawOrder>` **draw_order** = ``0``

.. rst-class:: classref-property-setget

- void **set_draw_order** **(** :ref:`DrawOrder<enum_CPUParticles_DrawOrder>` value **)**
- :ref:`DrawOrder<enum_CPUParticles_DrawOrder>` **get_draw_order** **(** **)**

Particle draw order. Uses :ref:`DrawOrder<enum_CPUParticles_DrawOrder>` values.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_emission_box_extents:

.. rst-class:: classref-property

:ref:`Vector3<class_Vector3>` **emission_box_extents**

.. rst-class:: classref-property-setget

- void **set_emission_box_extents** **(** :ref:`Vector3<class_Vector3>` value **)**
- :ref:`Vector3<class_Vector3>` **get_emission_box_extents** **(** **)**

The rectangle's extents if :ref:`emission_shape<class_CPUParticles_property_emission_shape>` is set to :ref:`EMISSION_SHAPE_BOX<class_CPUParticles_constant_EMISSION_SHAPE_BOX>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_emission_colors:

.. rst-class:: classref-property

:ref:`PoolColorArray<class_PoolColorArray>` **emission_colors**

.. rst-class:: classref-property-setget

- void **set_emission_colors** **(** :ref:`PoolColorArray<class_PoolColorArray>` value **)**
- :ref:`PoolColorArray<class_PoolColorArray>` **get_emission_colors** **(** **)**

Sets the :ref:`Color<class_Color>`\ s to modulate particles by when using :ref:`EMISSION_SHAPE_POINTS<class_CPUParticles_constant_EMISSION_SHAPE_POINTS>` or :ref:`EMISSION_SHAPE_DIRECTED_POINTS<class_CPUParticles_constant_EMISSION_SHAPE_DIRECTED_POINTS>`.

\ **Note:** :ref:`emission_colors<class_CPUParticles_property_emission_colors>` multiplies the particle mesh's vertex colors. To have a visible effect on a :ref:`Material3D<class_Material3D>`, :ref:`Material3D.vertex_color_use_as_albedo<class_Material3D_property_vertex_color_use_as_albedo>` *must* be ``true``. For a :ref:`ShaderMaterial<class_ShaderMaterial>`, ``ALBEDO *= COLOR.rgb;`` must be inserted in the shader's ``fragment()`` function. Otherwise, :ref:`emission_colors<class_CPUParticles_property_emission_colors>` will have no visible effect.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_emission_normals:

.. rst-class:: classref-property

:ref:`PoolVector3Array<class_PoolVector3Array>` **emission_normals**

.. rst-class:: classref-property-setget

- void **set_emission_normals** **(** :ref:`PoolVector3Array<class_PoolVector3Array>` value **)**
- :ref:`PoolVector3Array<class_PoolVector3Array>` **get_emission_normals** **(** **)**

Sets the direction the particles will be emitted in when using :ref:`EMISSION_SHAPE_DIRECTED_POINTS<class_CPUParticles_constant_EMISSION_SHAPE_DIRECTED_POINTS>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_emission_points:

.. rst-class:: classref-property

:ref:`PoolVector3Array<class_PoolVector3Array>` **emission_points**

.. rst-class:: classref-property-setget

- void **set_emission_points** **(** :ref:`PoolVector3Array<class_PoolVector3Array>` value **)**
- :ref:`PoolVector3Array<class_PoolVector3Array>` **get_emission_points** **(** **)**

Sets the initial positions to spawn particles when using :ref:`EMISSION_SHAPE_POINTS<class_CPUParticles_constant_EMISSION_SHAPE_POINTS>` or :ref:`EMISSION_SHAPE_DIRECTED_POINTS<class_CPUParticles_constant_EMISSION_SHAPE_DIRECTED_POINTS>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_emission_ring_axis:

.. rst-class:: classref-property

:ref:`Vector3<class_Vector3>` **emission_ring_axis**

.. rst-class:: classref-property-setget

- void **set_emission_ring_axis** **(** :ref:`Vector3<class_Vector3>` value **)**
- :ref:`Vector3<class_Vector3>` **get_emission_ring_axis** **(** **)**

The axis for the ring shaped emitter when using :ref:`EMISSION_SHAPE_RING<class_CPUParticles_constant_EMISSION_SHAPE_RING>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_emission_ring_height:

.. rst-class:: classref-property

:ref:`float<class_float>` **emission_ring_height**

.. rst-class:: classref-property-setget

- void **set_emission_ring_height** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_emission_ring_height** **(** **)**

The height for the ring shaped emitter when using :ref:`EMISSION_SHAPE_RING<class_CPUParticles_constant_EMISSION_SHAPE_RING>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_emission_ring_inner_radius:

.. rst-class:: classref-property

:ref:`float<class_float>` **emission_ring_inner_radius**

.. rst-class:: classref-property-setget

- void **set_emission_ring_inner_radius** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_emission_ring_inner_radius** **(** **)**

The inner radius for the ring shaped emitter when using :ref:`EMISSION_SHAPE_RING<class_CPUParticles_constant_EMISSION_SHAPE_RING>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_emission_ring_radius:

.. rst-class:: classref-property

:ref:`float<class_float>` **emission_ring_radius**

.. rst-class:: classref-property-setget

- void **set_emission_ring_radius** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_emission_ring_radius** **(** **)**

The radius for the ring shaped emitter when using :ref:`EMISSION_SHAPE_RING<class_CPUParticles_constant_EMISSION_SHAPE_RING>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_emission_shape:

.. rst-class:: classref-property

:ref:`EmissionShape<enum_CPUParticles_EmissionShape>` **emission_shape** = ``0``

.. rst-class:: classref-property-setget

- void **set_emission_shape** **(** :ref:`EmissionShape<enum_CPUParticles_EmissionShape>` value **)**
- :ref:`EmissionShape<enum_CPUParticles_EmissionShape>` **get_emission_shape** **(** **)**

Particles will be emitted inside this region. See :ref:`EmissionShape<enum_CPUParticles_EmissionShape>` for possible values.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_emission_sphere_radius:

.. rst-class:: classref-property

:ref:`float<class_float>` **emission_sphere_radius**

.. rst-class:: classref-property-setget

- void **set_emission_sphere_radius** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_emission_sphere_radius** **(** **)**

The sphere's radius if :ref:`EmissionShape<enum_CPUParticles_EmissionShape>` is set to :ref:`EMISSION_SHAPE_SPHERE<class_CPUParticles_constant_EMISSION_SHAPE_SPHERE>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_emitting:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **emitting** = ``true``

.. rst-class:: classref-property-setget

- void **set_emitting** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_emitting** **(** **)**

If ``true``, particles are being emitted.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_explosiveness:

.. rst-class:: classref-property

:ref:`float<class_float>` **explosiveness** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_explosiveness_ratio** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_explosiveness_ratio** **(** **)**

How rapidly particles in an emission cycle are emitted. If greater than ``0``, there will be a gap in emissions before the next cycle begins.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_fixed_fps:

.. rst-class:: classref-property

:ref:`int<class_int>` **fixed_fps** = ``0``

.. rst-class:: classref-property-setget

- void **set_fixed_fps** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_fixed_fps** **(** **)**

The particle system's frame rate is fixed to a value. For instance, changing the value to 2 will make the particles render at 2 frames per second. Note this does not slow down the particle system itself.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_flag_align_y:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **flag_align_y** = ``false``

.. rst-class:: classref-property-setget

- void **set_particle_flag** **(** :ref:`Flags<enum_CPUParticles_Flags>` flag, :ref:`bool<class_bool>` enable **)**
- :ref:`bool<class_bool>` **get_particle_flag** **(** :ref:`Flags<enum_CPUParticles_Flags>` flag **)** |const|

Align Y axis of particle with the direction of its velocity.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_flag_disable_z:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **flag_disable_z** = ``false``

.. rst-class:: classref-property-setget

- void **set_particle_flag** **(** :ref:`Flags<enum_CPUParticles_Flags>` flag, :ref:`bool<class_bool>` enable **)**
- :ref:`bool<class_bool>` **get_particle_flag** **(** :ref:`Flags<enum_CPUParticles_Flags>` flag **)** |const|

If ``true``, particles will not move on the z axis.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_flag_rotate_y:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **flag_rotate_y** = ``false``

.. rst-class:: classref-property-setget

- void **set_particle_flag** **(** :ref:`Flags<enum_CPUParticles_Flags>` flag, :ref:`bool<class_bool>` enable **)**
- :ref:`bool<class_bool>` **get_particle_flag** **(** :ref:`Flags<enum_CPUParticles_Flags>` flag **)** |const|

If ``true``, particles rotate around Y axis by :ref:`angle<class_CPUParticles_property_angle>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_flatness:

.. rst-class:: classref-property

:ref:`float<class_float>` **flatness** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_flatness** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_flatness** **(** **)**

Amount of :ref:`spread<class_CPUParticles_property_spread>` in Y/Z plane. A value of ``1`` restricts particles to X/Z plane.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_fract_delta:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **fract_delta** = ``true``

.. rst-class:: classref-property-setget

- void **set_fractional_delta** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_fractional_delta** **(** **)**

If ``true``, results in fractional delta calculation which has a smoother particles display effect.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_gravity:

.. rst-class:: classref-property

:ref:`Vector3<class_Vector3>` **gravity** = ``Vector3( 0, -9.8, 0 )``

.. rst-class:: classref-property-setget

- void **set_gravity** **(** :ref:`Vector3<class_Vector3>` value **)**
- :ref:`Vector3<class_Vector3>` **get_gravity** **(** **)**

Gravity applied to every particle.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_hue_variation:

.. rst-class:: classref-property

:ref:`float<class_float>` **hue_variation** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Initial hue variation applied to each particle.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_hue_variation_curve:

.. rst-class:: classref-property

:ref:`Curve<class_Curve>` **hue_variation_curve**

.. rst-class:: classref-property-setget

- void **set_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`Curve<class_Curve>` curve **)**
- :ref:`Curve<class_Curve>` **get_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Each particle's hue will vary along this :ref:`Curve<class_Curve>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_hue_variation_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **hue_variation_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Hue variation randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_initial_velocity:

.. rst-class:: classref-property

:ref:`float<class_float>` **initial_velocity** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Initial velocity magnitude for each particle. Direction comes from :ref:`spread<class_CPUParticles_property_spread>` and the node's orientation.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_initial_velocity_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **initial_velocity_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Initial velocity randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_lifetime:

.. rst-class:: classref-property

:ref:`float<class_float>` **lifetime** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_lifetime** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_lifetime** **(** **)**

The amount of time each particle will exist (in seconds).

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_lifetime_randomness:

.. rst-class:: classref-property

:ref:`float<class_float>` **lifetime_randomness** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_lifetime_randomness** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_lifetime_randomness** **(** **)**

Particle lifetime randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_linear_accel:

.. rst-class:: classref-property

:ref:`float<class_float>` **linear_accel** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Linear acceleration applied to each particle in the direction of motion.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_linear_accel_curve:

.. rst-class:: classref-property

:ref:`Curve<class_Curve>` **linear_accel_curve**

.. rst-class:: classref-property-setget

- void **set_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`Curve<class_Curve>` curve **)**
- :ref:`Curve<class_Curve>` **get_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Each particle's linear acceleration will vary along this :ref:`Curve<class_Curve>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_linear_accel_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **linear_accel_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Linear acceleration randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_local_coords:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **local_coords** = ``true``

.. rst-class:: classref-property-setget

- void **set_use_local_coordinates** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_use_local_coordinates** **(** **)**

If ``true``, particles use the parent node's coordinate space. If ``false``, they use global coordinates.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_mesh:

.. rst-class:: classref-property

:ref:`Mesh<class_Mesh>` **mesh**

.. rst-class:: classref-property-setget

- void **set_mesh** **(** :ref:`Mesh<class_Mesh>` value **)**
- :ref:`Mesh<class_Mesh>` **get_mesh** **(** **)**

The :ref:`Mesh<class_Mesh>` used for each particle. If ``null``, particles will be spheres.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_one_shot:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **one_shot** = ``false``

.. rst-class:: classref-property-setget

- void **set_one_shot** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_one_shot** **(** **)**

If ``true``, only one emission cycle occurs. If set ``true`` during a cycle, emission will stop at the cycle's end.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_orbit_velocity:

.. rst-class:: classref-property

:ref:`float<class_float>` **orbit_velocity**

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Orbital velocity applied to each particle. Makes the particles circle around origin in the local XY plane. Specified in number of full rotations around origin per second.

This property is only available when :ref:`flag_disable_z<class_CPUParticles_property_flag_disable_z>` is ``true``.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_orbit_velocity_curve:

.. rst-class:: classref-property

:ref:`Curve<class_Curve>` **orbit_velocity_curve**

.. rst-class:: classref-property-setget

- void **set_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`Curve<class_Curve>` curve **)**
- :ref:`Curve<class_Curve>` **get_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Each particle's orbital velocity will vary along this :ref:`Curve<class_Curve>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_orbit_velocity_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **orbit_velocity_random**

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Orbital velocity randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_preprocess:

.. rst-class:: classref-property

:ref:`float<class_float>` **preprocess** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_pre_process_time** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_pre_process_time** **(** **)**

Particle system starts as if it had already run for this many seconds.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_radial_accel:

.. rst-class:: classref-property

:ref:`float<class_float>` **radial_accel** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Radial acceleration applied to each particle. Makes particle accelerate away from origin.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_radial_accel_curve:

.. rst-class:: classref-property

:ref:`Curve<class_Curve>` **radial_accel_curve**

.. rst-class:: classref-property-setget

- void **set_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`Curve<class_Curve>` curve **)**
- :ref:`Curve<class_Curve>` **get_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Each particle's radial acceleration will vary along this :ref:`Curve<class_Curve>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_radial_accel_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **radial_accel_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Radial acceleration randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_randomness:

.. rst-class:: classref-property

:ref:`float<class_float>` **randomness** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_randomness_ratio** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_randomness_ratio** **(** **)**

Emission lifetime randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_scale_amount:

.. rst-class:: classref-property

:ref:`float<class_float>` **scale_amount** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Initial scale applied to each particle. This can be set to a negative value to flip the particle on all axes.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_scale_amount_curve:

.. rst-class:: classref-property

:ref:`Curve<class_Curve>` **scale_amount_curve**

.. rst-class:: classref-property-setget

- void **set_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`Curve<class_Curve>` curve **)**
- :ref:`Curve<class_Curve>` **get_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Each particle's scale will vary along this :ref:`Curve<class_Curve>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_scale_amount_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **scale_amount_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Scale randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_speed_scale:

.. rst-class:: classref-property

:ref:`float<class_float>` **speed_scale** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_speed_scale** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_speed_scale** **(** **)**

Particle system's running speed scaling ratio. A value of ``0`` can be used to pause the particles.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_spread:

.. rst-class:: classref-property

:ref:`float<class_float>` **spread** = ``45.0``

.. rst-class:: classref-property-setget

- void **set_spread** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_spread** **(** **)**

Each particle's initial direction range from ``+spread`` to ``-spread`` degrees. Applied to X/Z plane and Y/Z planes.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_tangential_accel:

.. rst-class:: classref-property

:ref:`float<class_float>` **tangential_accel** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Tangential acceleration applied to each particle. Tangential acceleration is perpendicular to the particle's velocity giving the particles a swirling motion.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_tangential_accel_curve:

.. rst-class:: classref-property

:ref:`Curve<class_Curve>` **tangential_accel_curve**

.. rst-class:: classref-property-setget

- void **set_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`Curve<class_Curve>` curve **)**
- :ref:`Curve<class_Curve>` **get_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Each particle's tangential acceleration will vary along this :ref:`Curve<class_Curve>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_property_tangential_accel_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **tangential_accel_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Tangential acceleration randomness ratio.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_CPUParticles_method_convert_from_particles:

.. rst-class:: classref-method

void **convert_from_particles** **(** :ref:`Node<class_Node>` particles **)**

Sets this node's properties to match a given :ref:`Particles<class_Particles>` node with an assigned :ref:`ParticlesMaterial<class_ParticlesMaterial>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_method_get_param:

.. rst-class:: classref-method

:ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Returns the base value of the parameter specified by :ref:`Parameter<enum_CPUParticles_Parameter>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_method_get_param_curve:

.. rst-class:: classref-method

:ref:`Curve<class_Curve>` **get_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Returns the :ref:`Curve<class_Curve>` of the parameter specified by :ref:`Parameter<enum_CPUParticles_Parameter>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_method_get_param_randomness:

.. rst-class:: classref-method

:ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param **)** |const|

Returns the randomness factor of the parameter specified by :ref:`Parameter<enum_CPUParticles_Parameter>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_method_get_particle_flag:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **get_particle_flag** **(** :ref:`Flags<enum_CPUParticles_Flags>` flag **)** |const|

Returns the enabled state of the given flag (see :ref:`Flags<enum_CPUParticles_Flags>` for options).

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_method_restart:

.. rst-class:: classref-method

void **restart** **(** **)**

Restarts the particle emitter.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_method_set_param:

.. rst-class:: classref-method

void **set_param** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` value **)**

Sets the base value of the parameter specified by :ref:`Parameter<enum_CPUParticles_Parameter>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_method_set_param_curve:

.. rst-class:: classref-method

void **set_param_curve** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`Curve<class_Curve>` curve **)**

Sets the :ref:`Curve<class_Curve>` of the parameter specified by :ref:`Parameter<enum_CPUParticles_Parameter>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_method_set_param_randomness:

.. rst-class:: classref-method

void **set_param_randomness** **(** :ref:`Parameter<enum_CPUParticles_Parameter>` param, :ref:`float<class_float>` randomness **)**

Sets the randomness factor of the parameter specified by :ref:`Parameter<enum_CPUParticles_Parameter>`.

.. rst-class:: classref-item-separator

----

.. _class_CPUParticles_method_set_particle_flag:

.. rst-class:: classref-method

void **set_particle_flag** **(** :ref:`Flags<enum_CPUParticles_Flags>` flag, :ref:`bool<class_bool>` enable **)**

Enables or disables the given flag (see :ref:`Flags<enum_CPUParticles_Flags>` for options).

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
