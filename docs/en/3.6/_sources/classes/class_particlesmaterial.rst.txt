:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Redot engine sources.
.. Generator: https://github.com/redot-engine/redot/tree/3.6/doc/tools/make_rst.py.
.. XML source: https://github.com/redot-engine/redot/tree/3.6/doc/classes/ParticlesMaterial.xml.

.. _class_ParticlesMaterial:

ParticlesMaterial
=================

**Inherits:** :ref:`Material<class_Material>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

Particle properties for :ref:`Particles<class_Particles>` and :ref:`Particles2D<class_Particles2D>` nodes.

.. rst-class:: classref-introduction-group

Description
-----------

ParticlesMaterial defines particle properties and behavior. It is used in the ``process_material`` of :ref:`Particles<class_Particles>` and :ref:`Particles2D<class_Particles2D>` emitter nodes.

Some of this material's properties are applied to each particle when emitted, while others can have a :ref:`CurveTexture<class_CurveTexture>` applied to vary values over the lifetime of the particle.

When a randomness ratio is applied to a property it is used to scale that property by a random amount. The random ratio is used to interpolate between ``1.0`` and a random number less than one, the result is multiplied by the property to obtain the randomized property. For example a random ratio of ``0.4`` would scale the original property between ``0.4-1.0`` of its original value.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`angle<class_ParticlesMaterial_property_angle>`                                           | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Texture<class_Texture>`                              | :ref:`angle_curve<class_ParticlesMaterial_property_angle_curve>`                               |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`angle_random<class_ParticlesMaterial_property_angle_random>`                             | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`angular_velocity<class_ParticlesMaterial_property_angular_velocity>`                     | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Texture<class_Texture>`                              | :ref:`angular_velocity_curve<class_ParticlesMaterial_property_angular_velocity_curve>`         |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`angular_velocity_random<class_ParticlesMaterial_property_angular_velocity_random>`       | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`anim_offset<class_ParticlesMaterial_property_anim_offset>`                               | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Texture<class_Texture>`                              | :ref:`anim_offset_curve<class_ParticlesMaterial_property_anim_offset_curve>`                   |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`anim_offset_random<class_ParticlesMaterial_property_anim_offset_random>`                 | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`anim_speed<class_ParticlesMaterial_property_anim_speed>`                                 | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Texture<class_Texture>`                              | :ref:`anim_speed_curve<class_ParticlesMaterial_property_anim_speed_curve>`                     |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`anim_speed_random<class_ParticlesMaterial_property_anim_speed_random>`                   | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Color<class_Color>`                                  | :ref:`color<class_ParticlesMaterial_property_color>`                                           | ``Color( 1, 1, 1, 1 )``   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Texture<class_Texture>`                              | :ref:`color_initial_ramp<class_ParticlesMaterial_property_color_initial_ramp>`                 |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Texture<class_Texture>`                              | :ref:`color_ramp<class_ParticlesMaterial_property_color_ramp>`                                 |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`damping<class_ParticlesMaterial_property_damping>`                                       | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Texture<class_Texture>`                              | :ref:`damping_curve<class_ParticlesMaterial_property_damping_curve>`                           |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`damping_random<class_ParticlesMaterial_property_damping_random>`                         | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Vector3<class_Vector3>`                              | :ref:`direction<class_ParticlesMaterial_property_direction>`                                   | ``Vector3( 1, 0, 0 )``    |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Vector3<class_Vector3>`                              | :ref:`emission_box_extents<class_ParticlesMaterial_property_emission_box_extents>`             |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Texture<class_Texture>`                              | :ref:`emission_color_texture<class_ParticlesMaterial_property_emission_color_texture>`         |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Texture<class_Texture>`                              | :ref:`emission_normal_texture<class_ParticlesMaterial_property_emission_normal_texture>`       |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`int<class_int>`                                      | :ref:`emission_point_count<class_ParticlesMaterial_property_emission_point_count>`             |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Texture<class_Texture>`                              | :ref:`emission_point_texture<class_ParticlesMaterial_property_emission_point_texture>`         |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Vector3<class_Vector3>`                              | :ref:`emission_ring_axis<class_ParticlesMaterial_property_emission_ring_axis>`                 |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`emission_ring_height<class_ParticlesMaterial_property_emission_ring_height>`             |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`emission_ring_inner_radius<class_ParticlesMaterial_property_emission_ring_inner_radius>` |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`emission_ring_radius<class_ParticlesMaterial_property_emission_ring_radius>`             |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`EmissionShape<enum_ParticlesMaterial_EmissionShape>` | :ref:`emission_shape<class_ParticlesMaterial_property_emission_shape>`                         | ``0``                     |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`emission_sphere_radius<class_ParticlesMaterial_property_emission_sphere_radius>`         |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`bool<class_bool>`                                    | :ref:`flag_align_y<class_ParticlesMaterial_property_flag_align_y>`                             | ``false``                 |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`bool<class_bool>`                                    | :ref:`flag_disable_z<class_ParticlesMaterial_property_flag_disable_z>`                         | ``false``                 |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`bool<class_bool>`                                    | :ref:`flag_rotate_y<class_ParticlesMaterial_property_flag_rotate_y>`                           | ``false``                 |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`flatness<class_ParticlesMaterial_property_flatness>`                                     | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Vector3<class_Vector3>`                              | :ref:`gravity<class_ParticlesMaterial_property_gravity>`                                       | ``Vector3( 0, -9.8, 0 )`` |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`hue_variation<class_ParticlesMaterial_property_hue_variation>`                           | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Texture<class_Texture>`                              | :ref:`hue_variation_curve<class_ParticlesMaterial_property_hue_variation_curve>`               |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`hue_variation_random<class_ParticlesMaterial_property_hue_variation_random>`             | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`initial_velocity<class_ParticlesMaterial_property_initial_velocity>`                     | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`initial_velocity_random<class_ParticlesMaterial_property_initial_velocity_random>`       | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`lifetime_randomness<class_ParticlesMaterial_property_lifetime_randomness>`               | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`linear_accel<class_ParticlesMaterial_property_linear_accel>`                             | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Texture<class_Texture>`                              | :ref:`linear_accel_curve<class_ParticlesMaterial_property_linear_accel_curve>`                 |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`linear_accel_random<class_ParticlesMaterial_property_linear_accel_random>`               | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`orbit_velocity<class_ParticlesMaterial_property_orbit_velocity>`                         |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Texture<class_Texture>`                              | :ref:`orbit_velocity_curve<class_ParticlesMaterial_property_orbit_velocity_curve>`             |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`orbit_velocity_random<class_ParticlesMaterial_property_orbit_velocity_random>`           |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`radial_accel<class_ParticlesMaterial_property_radial_accel>`                             | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Texture<class_Texture>`                              | :ref:`radial_accel_curve<class_ParticlesMaterial_property_radial_accel_curve>`                 |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`radial_accel_random<class_ParticlesMaterial_property_radial_accel_random>`               | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`scale<class_ParticlesMaterial_property_scale>`                                           | ``1.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Texture<class_Texture>`                              | :ref:`scale_curve<class_ParticlesMaterial_property_scale_curve>`                               |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`scale_random<class_ParticlesMaterial_property_scale_random>`                             | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`spread<class_ParticlesMaterial_property_spread>`                                         | ``45.0``                  |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`tangential_accel<class_ParticlesMaterial_property_tangential_accel>`                     | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`Texture<class_Texture>`                              | :ref:`tangential_accel_curve<class_ParticlesMaterial_property_tangential_accel_curve>`         |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`float<class_float>`                                  | :ref:`tangential_accel_random<class_ParticlesMaterial_property_tangential_accel_random>`       | ``0.0``                   |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`GradientTexture<class_GradientTexture>`              | :ref:`trail_color_modifier<class_ParticlesMaterial_property_trail_color_modifier>`             |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`int<class_int>`                                      | :ref:`trail_divisor<class_ParticlesMaterial_property_trail_divisor>`                           | ``1``                     |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+
   | :ref:`CurveTexture<class_CurveTexture>`                    | :ref:`trail_size_modifier<class_ParticlesMaterial_property_trail_size_modifier>`               |                           |
   +------------------------------------------------------------+------------------------------------------------------------------------------------------------+---------------------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`get_flag<class_ParticlesMaterial_method_get_flag>` **(** :ref:`Flags<enum_ParticlesMaterial_Flags>` flag **)** |const|                                                                |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`get_param<class_ParticlesMaterial_method_get_param>` **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|                                                     |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`get_param_randomness<class_ParticlesMaterial_method_get_param_randomness>` **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|                               |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Texture<class_Texture>` | :ref:`get_param_texture<class_ParticlesMaterial_method_get_param_texture>` **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|                                     |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                          | :ref:`set_flag<class_ParticlesMaterial_method_set_flag>` **(** :ref:`Flags<enum_ParticlesMaterial_Flags>` flag, :ref:`bool<class_bool>` enable **)**                                        |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                          | :ref:`set_param<class_ParticlesMaterial_method_set_param>` **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` value **)**                            |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                          | :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>` **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` randomness **)** |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                          | :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`Texture<class_Texture>` texture **)**      |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Enumerations
------------

.. _enum_ParticlesMaterial_Parameter:

.. rst-class:: classref-enumeration

enum **Parameter**:

.. _class_ParticlesMaterial_constant_PARAM_INITIAL_LINEAR_VELOCITY:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_ParticlesMaterial_Parameter>` **PARAM_INITIAL_LINEAR_VELOCITY** = ``0``

Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set initial velocity properties.

.. _class_ParticlesMaterial_constant_PARAM_ANGULAR_VELOCITY:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_ParticlesMaterial_Parameter>` **PARAM_ANGULAR_VELOCITY** = ``1``

Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set angular velocity properties.

.. _class_ParticlesMaterial_constant_PARAM_ORBIT_VELOCITY:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_ParticlesMaterial_Parameter>` **PARAM_ORBIT_VELOCITY** = ``2``

Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set orbital velocity properties.

.. _class_ParticlesMaterial_constant_PARAM_LINEAR_ACCEL:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_ParticlesMaterial_Parameter>` **PARAM_LINEAR_ACCEL** = ``3``

Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set linear acceleration properties.

.. _class_ParticlesMaterial_constant_PARAM_RADIAL_ACCEL:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_ParticlesMaterial_Parameter>` **PARAM_RADIAL_ACCEL** = ``4``

Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set radial acceleration properties.

.. _class_ParticlesMaterial_constant_PARAM_TANGENTIAL_ACCEL:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_ParticlesMaterial_Parameter>` **PARAM_TANGENTIAL_ACCEL** = ``5``

Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set tangential acceleration properties.

.. _class_ParticlesMaterial_constant_PARAM_DAMPING:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_ParticlesMaterial_Parameter>` **PARAM_DAMPING** = ``6``

Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set damping properties.

.. _class_ParticlesMaterial_constant_PARAM_ANGLE:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_ParticlesMaterial_Parameter>` **PARAM_ANGLE** = ``7``

Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set angle properties.

.. _class_ParticlesMaterial_constant_PARAM_SCALE:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_ParticlesMaterial_Parameter>` **PARAM_SCALE** = ``8``

Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set scale properties.

.. _class_ParticlesMaterial_constant_PARAM_HUE_VARIATION:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_ParticlesMaterial_Parameter>` **PARAM_HUE_VARIATION** = ``9``

Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set hue variation properties.

.. _class_ParticlesMaterial_constant_PARAM_ANIM_SPEED:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_ParticlesMaterial_Parameter>` **PARAM_ANIM_SPEED** = ``10``

Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set animation speed properties.

.. _class_ParticlesMaterial_constant_PARAM_ANIM_OFFSET:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_ParticlesMaterial_Parameter>` **PARAM_ANIM_OFFSET** = ``11``

Use with :ref:`set_param<class_ParticlesMaterial_method_set_param>`, :ref:`set_param_randomness<class_ParticlesMaterial_method_set_param_randomness>`, and :ref:`set_param_texture<class_ParticlesMaterial_method_set_param_texture>` to set animation offset properties.

.. _class_ParticlesMaterial_constant_PARAM_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`Parameter<enum_ParticlesMaterial_Parameter>` **PARAM_MAX** = ``12``

Represents the size of the :ref:`Parameter<enum_ParticlesMaterial_Parameter>` enum.

.. rst-class:: classref-item-separator

----

.. _enum_ParticlesMaterial_Flags:

.. rst-class:: classref-enumeration

enum **Flags**:

.. _class_ParticlesMaterial_constant_FLAG_ALIGN_Y_TO_VELOCITY:

.. rst-class:: classref-enumeration-constant

:ref:`Flags<enum_ParticlesMaterial_Flags>` **FLAG_ALIGN_Y_TO_VELOCITY** = ``0``

Use with :ref:`set_flag<class_ParticlesMaterial_method_set_flag>` to set :ref:`flag_align_y<class_ParticlesMaterial_property_flag_align_y>`.

.. _class_ParticlesMaterial_constant_FLAG_ROTATE_Y:

.. rst-class:: classref-enumeration-constant

:ref:`Flags<enum_ParticlesMaterial_Flags>` **FLAG_ROTATE_Y** = ``1``

Use with :ref:`set_flag<class_ParticlesMaterial_method_set_flag>` to set :ref:`flag_rotate_y<class_ParticlesMaterial_property_flag_rotate_y>`.

.. _class_ParticlesMaterial_constant_FLAG_DISABLE_Z:

.. rst-class:: classref-enumeration-constant

:ref:`Flags<enum_ParticlesMaterial_Flags>` **FLAG_DISABLE_Z** = ``2``

Use with :ref:`set_flag<class_ParticlesMaterial_method_set_flag>` to set :ref:`flag_disable_z<class_ParticlesMaterial_property_flag_disable_z>`.

.. _class_ParticlesMaterial_constant_FLAG_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`Flags<enum_ParticlesMaterial_Flags>` **FLAG_MAX** = ``3``

Represents the size of the :ref:`Flags<enum_ParticlesMaterial_Flags>` enum.

.. rst-class:: classref-item-separator

----

.. _enum_ParticlesMaterial_EmissionShape:

.. rst-class:: classref-enumeration

enum **EmissionShape**:

.. _class_ParticlesMaterial_constant_EMISSION_SHAPE_POINT:

.. rst-class:: classref-enumeration-constant

:ref:`EmissionShape<enum_ParticlesMaterial_EmissionShape>` **EMISSION_SHAPE_POINT** = ``0``

All particles will be emitted from a single point.

.. _class_ParticlesMaterial_constant_EMISSION_SHAPE_SPHERE:

.. rst-class:: classref-enumeration-constant

:ref:`EmissionShape<enum_ParticlesMaterial_EmissionShape>` **EMISSION_SHAPE_SPHERE** = ``1``

Particles will be emitted in the volume of a sphere.

.. _class_ParticlesMaterial_constant_EMISSION_SHAPE_BOX:

.. rst-class:: classref-enumeration-constant

:ref:`EmissionShape<enum_ParticlesMaterial_EmissionShape>` **EMISSION_SHAPE_BOX** = ``2``

Particles will be emitted in the volume of a box.

.. _class_ParticlesMaterial_constant_EMISSION_SHAPE_POINTS:

.. rst-class:: classref-enumeration-constant

:ref:`EmissionShape<enum_ParticlesMaterial_EmissionShape>` **EMISSION_SHAPE_POINTS** = ``3``

Particles will be emitted at a position determined by sampling a random point on the :ref:`emission_point_texture<class_ParticlesMaterial_property_emission_point_texture>`. Particle color will be modulated by :ref:`emission_color_texture<class_ParticlesMaterial_property_emission_color_texture>`.

.. _class_ParticlesMaterial_constant_EMISSION_SHAPE_DIRECTED_POINTS:

.. rst-class:: classref-enumeration-constant

:ref:`EmissionShape<enum_ParticlesMaterial_EmissionShape>` **EMISSION_SHAPE_DIRECTED_POINTS** = ``4``

Particles will be emitted at a position determined by sampling a random point on the :ref:`emission_point_texture<class_ParticlesMaterial_property_emission_point_texture>`. Particle velocity and rotation will be set based on :ref:`emission_normal_texture<class_ParticlesMaterial_property_emission_normal_texture>`. Particle color will be modulated by :ref:`emission_color_texture<class_ParticlesMaterial_property_emission_color_texture>`.

.. _class_ParticlesMaterial_constant_EMISSION_SHAPE_RING:

.. rst-class:: classref-enumeration-constant

:ref:`EmissionShape<enum_ParticlesMaterial_EmissionShape>` **EMISSION_SHAPE_RING** = ``5``

Particles will be emitted in a ring or cylinder.

.. _class_ParticlesMaterial_constant_EMISSION_SHAPE_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`EmissionShape<enum_ParticlesMaterial_EmissionShape>` **EMISSION_SHAPE_MAX** = ``6``

Represents the size of the :ref:`EmissionShape<enum_ParticlesMaterial_EmissionShape>` enum.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_ParticlesMaterial_property_angle:

.. rst-class:: classref-property

:ref:`float<class_float>` **angle** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Initial rotation applied to each particle, in degrees.

\ **Note:** Only applied when :ref:`flag_disable_z<class_ParticlesMaterial_property_flag_disable_z>` or :ref:`flag_rotate_y<class_ParticlesMaterial_property_flag_rotate_y>` are ``true`` or the :ref:`Material3D<class_Material3D>` being used to draw the particle is using :ref:`Material3D.BILLBOARD_PARTICLES<class_Material3D_constant_BILLBOARD_PARTICLES>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_angle_curve:

.. rst-class:: classref-property

:ref:`Texture<class_Texture>` **angle_curve**

.. rst-class:: classref-property-setget

- void **set_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`Texture<class_Texture>` texture **)**
- :ref:`Texture<class_Texture>` **get_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Each particle's rotation will be animated along this :ref:`CurveTexture<class_CurveTexture>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_angle_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **angle_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Rotation randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_angular_velocity:

.. rst-class:: classref-property

:ref:`float<class_float>` **angular_velocity** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Initial angular velocity applied to each particle in *degrees* per second. Sets the speed of rotation of the particle.

\ **Note:** Only applied when :ref:`flag_disable_z<class_ParticlesMaterial_property_flag_disable_z>` or :ref:`flag_rotate_y<class_ParticlesMaterial_property_flag_rotate_y>` are ``true`` or the :ref:`Material3D<class_Material3D>` being used to draw the particle is using :ref:`Material3D.BILLBOARD_PARTICLES<class_Material3D_constant_BILLBOARD_PARTICLES>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_angular_velocity_curve:

.. rst-class:: classref-property

:ref:`Texture<class_Texture>` **angular_velocity_curve**

.. rst-class:: classref-property-setget

- void **set_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`Texture<class_Texture>` texture **)**
- :ref:`Texture<class_Texture>` **get_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Each particle's angular velocity will vary along this :ref:`CurveTexture<class_CurveTexture>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_angular_velocity_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **angular_velocity_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Angular velocity randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_anim_offset:

.. rst-class:: classref-property

:ref:`float<class_float>` **anim_offset** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Particle animation offset.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_anim_offset_curve:

.. rst-class:: classref-property

:ref:`Texture<class_Texture>` **anim_offset_curve**

.. rst-class:: classref-property-setget

- void **set_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`Texture<class_Texture>` texture **)**
- :ref:`Texture<class_Texture>` **get_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Each particle's animation offset will vary along this :ref:`CurveTexture<class_CurveTexture>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_anim_offset_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **anim_offset_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Animation offset randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_anim_speed:

.. rst-class:: classref-property

:ref:`float<class_float>` **anim_speed** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Particle animation speed.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_anim_speed_curve:

.. rst-class:: classref-property

:ref:`Texture<class_Texture>` **anim_speed_curve**

.. rst-class:: classref-property-setget

- void **set_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`Texture<class_Texture>` texture **)**
- :ref:`Texture<class_Texture>` **get_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Each particle's animation speed will vary along this :ref:`CurveTexture<class_CurveTexture>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_anim_speed_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **anim_speed_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Animation speed randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_color:

.. rst-class:: classref-property

:ref:`Color<class_Color>` **color** = ``Color( 1, 1, 1, 1 )``

.. rst-class:: classref-property-setget

- void **set_color** **(** :ref:`Color<class_Color>` value **)**
- :ref:`Color<class_Color>` **get_color** **(** **)**

Each particle's initial color. If the :ref:`Particles2D<class_Particles2D>`'s or :ref:`Particles<class_Particles>`'s ``texture`` is defined, it will be multiplied by this color.

\ **Note:** :ref:`color<class_ParticlesMaterial_property_color>` multiplies the particle mesh's vertex colors. To have a visible effect on a :ref:`Material3D<class_Material3D>`, :ref:`Material3D.vertex_color_use_as_albedo<class_Material3D_property_vertex_color_use_as_albedo>` *must* be ``true``. For a :ref:`ShaderMaterial<class_ShaderMaterial>`, ``ALBEDO *= COLOR.rgb;`` must be inserted in the shader's ``fragment()`` function. Otherwise, :ref:`color<class_ParticlesMaterial_property_color>` will have no visible effect.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_color_initial_ramp:

.. rst-class:: classref-property

:ref:`Texture<class_Texture>` **color_initial_ramp**

.. rst-class:: classref-property-setget

- void **set_color_initial_ramp** **(** :ref:`Texture<class_Texture>` value **)**
- :ref:`Texture<class_Texture>` **get_color_initial_ramp** **(** **)**

Each particle's initial color will vary along this :ref:`GradientTexture<class_GradientTexture>` (multiplied with :ref:`color<class_ParticlesMaterial_property_color>`).

\ **Note:** :ref:`color_initial_ramp<class_ParticlesMaterial_property_color_initial_ramp>` multiplies the particle mesh's vertex colors. To have a visible effect on a :ref:`Material3D<class_Material3D>`, :ref:`Material3D.vertex_color_use_as_albedo<class_Material3D_property_vertex_color_use_as_albedo>` *must* be ``true``. For a :ref:`ShaderMaterial<class_ShaderMaterial>`, ``ALBEDO *= COLOR.rgb;`` must be inserted in the shader's ``fragment()`` function. Otherwise, :ref:`color_initial_ramp<class_ParticlesMaterial_property_color_initial_ramp>` will have no visible effect.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_color_ramp:

.. rst-class:: classref-property

:ref:`Texture<class_Texture>` **color_ramp**

.. rst-class:: classref-property-setget

- void **set_color_ramp** **(** :ref:`Texture<class_Texture>` value **)**
- :ref:`Texture<class_Texture>` **get_color_ramp** **(** **)**

Each particle's color will vary along this :ref:`GradientTexture<class_GradientTexture>` over its lifetime (multiplied with :ref:`color<class_ParticlesMaterial_property_color>`).

\ **Note:** :ref:`color_ramp<class_ParticlesMaterial_property_color_ramp>` multiplies the particle mesh's vertex colors. To have a visible effect on a :ref:`Material3D<class_Material3D>`, :ref:`Material3D.vertex_color_use_as_albedo<class_Material3D_property_vertex_color_use_as_albedo>` *must* be ``true``. For a :ref:`ShaderMaterial<class_ShaderMaterial>`, ``ALBEDO *= COLOR.rgb;`` must be inserted in the shader's ``fragment()`` function. Otherwise, :ref:`color_ramp<class_ParticlesMaterial_property_color_ramp>` will have no visible effect.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_damping:

.. rst-class:: classref-property

:ref:`float<class_float>` **damping** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

The rate at which particles lose velocity.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_damping_curve:

.. rst-class:: classref-property

:ref:`Texture<class_Texture>` **damping_curve**

.. rst-class:: classref-property-setget

- void **set_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`Texture<class_Texture>` texture **)**
- :ref:`Texture<class_Texture>` **get_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Damping will vary along this :ref:`CurveTexture<class_CurveTexture>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_damping_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **damping_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Damping randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_direction:

.. rst-class:: classref-property

:ref:`Vector3<class_Vector3>` **direction** = ``Vector3( 1, 0, 0 )``

.. rst-class:: classref-property-setget

- void **set_direction** **(** :ref:`Vector3<class_Vector3>` value **)**
- :ref:`Vector3<class_Vector3>` **get_direction** **(** **)**

Unit vector specifying the particles' emission direction.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_emission_box_extents:

.. rst-class:: classref-property

:ref:`Vector3<class_Vector3>` **emission_box_extents**

.. rst-class:: classref-property-setget

- void **set_emission_box_extents** **(** :ref:`Vector3<class_Vector3>` value **)**
- :ref:`Vector3<class_Vector3>` **get_emission_box_extents** **(** **)**

The box's extents if ``emission_shape`` is set to :ref:`EMISSION_SHAPE_BOX<class_ParticlesMaterial_constant_EMISSION_SHAPE_BOX>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_emission_color_texture:

.. rst-class:: classref-property

:ref:`Texture<class_Texture>` **emission_color_texture**

.. rst-class:: classref-property-setget

- void **set_emission_color_texture** **(** :ref:`Texture<class_Texture>` value **)**
- :ref:`Texture<class_Texture>` **get_emission_color_texture** **(** **)**

Particle color will be modulated by color determined by sampling this texture at the same point as the :ref:`emission_point_texture<class_ParticlesMaterial_property_emission_point_texture>`.

\ **Note:** :ref:`emission_color_texture<class_ParticlesMaterial_property_emission_color_texture>` multiplies the particle mesh's vertex colors. To have a visible effect on a :ref:`Material3D<class_Material3D>`, :ref:`Material3D.vertex_color_use_as_albedo<class_Material3D_property_vertex_color_use_as_albedo>` *must* be ``true``. For a :ref:`ShaderMaterial<class_ShaderMaterial>`, ``ALBEDO *= COLOR.rgb;`` must be inserted in the shader's ``fragment()`` function. Otherwise, :ref:`emission_color_texture<class_ParticlesMaterial_property_emission_color_texture>` will have no visible effect.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_emission_normal_texture:

.. rst-class:: classref-property

:ref:`Texture<class_Texture>` **emission_normal_texture**

.. rst-class:: classref-property-setget

- void **set_emission_normal_texture** **(** :ref:`Texture<class_Texture>` value **)**
- :ref:`Texture<class_Texture>` **get_emission_normal_texture** **(** **)**

Particle velocity and rotation will be set by sampling this texture at the same point as the :ref:`emission_point_texture<class_ParticlesMaterial_property_emission_point_texture>`. Used only in :ref:`EMISSION_SHAPE_DIRECTED_POINTS<class_ParticlesMaterial_constant_EMISSION_SHAPE_DIRECTED_POINTS>`. Can be created automatically from mesh or node by selecting "Create Emission Points from Mesh/Node" under the "Particles" tool in the toolbar.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_emission_point_count:

.. rst-class:: classref-property

:ref:`int<class_int>` **emission_point_count**

.. rst-class:: classref-property-setget

- void **set_emission_point_count** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_emission_point_count** **(** **)**

The number of emission points if ``emission_shape`` is set to :ref:`EMISSION_SHAPE_POINTS<class_ParticlesMaterial_constant_EMISSION_SHAPE_POINTS>` or :ref:`EMISSION_SHAPE_DIRECTED_POINTS<class_ParticlesMaterial_constant_EMISSION_SHAPE_DIRECTED_POINTS>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_emission_point_texture:

.. rst-class:: classref-property

:ref:`Texture<class_Texture>` **emission_point_texture**

.. rst-class:: classref-property-setget

- void **set_emission_point_texture** **(** :ref:`Texture<class_Texture>` value **)**
- :ref:`Texture<class_Texture>` **get_emission_point_texture** **(** **)**

Particles will be emitted at positions determined by sampling this texture at a random position. Used with :ref:`EMISSION_SHAPE_POINTS<class_ParticlesMaterial_constant_EMISSION_SHAPE_POINTS>` and :ref:`EMISSION_SHAPE_DIRECTED_POINTS<class_ParticlesMaterial_constant_EMISSION_SHAPE_DIRECTED_POINTS>`. Can be created automatically from mesh or node by selecting "Create Emission Points from Mesh/Node" under the "Particles" tool in the toolbar.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_emission_ring_axis:

.. rst-class:: classref-property

:ref:`Vector3<class_Vector3>` **emission_ring_axis**

.. rst-class:: classref-property-setget

- void **set_emission_ring_axis** **(** :ref:`Vector3<class_Vector3>` value **)**
- :ref:`Vector3<class_Vector3>` **get_emission_ring_axis** **(** **)**

The axis of the ring when using the emitter :ref:`EMISSION_SHAPE_RING<class_ParticlesMaterial_constant_EMISSION_SHAPE_RING>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_emission_ring_height:

.. rst-class:: classref-property

:ref:`float<class_float>` **emission_ring_height**

.. rst-class:: classref-property-setget

- void **set_emission_ring_height** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_emission_ring_height** **(** **)**

The height of the ring when using the emitter :ref:`EMISSION_SHAPE_RING<class_ParticlesMaterial_constant_EMISSION_SHAPE_RING>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_emission_ring_inner_radius:

.. rst-class:: classref-property

:ref:`float<class_float>` **emission_ring_inner_radius**

.. rst-class:: classref-property-setget

- void **set_emission_ring_inner_radius** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_emission_ring_inner_radius** **(** **)**

The inner radius of the ring when using the emitter :ref:`EMISSION_SHAPE_RING<class_ParticlesMaterial_constant_EMISSION_SHAPE_RING>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_emission_ring_radius:

.. rst-class:: classref-property

:ref:`float<class_float>` **emission_ring_radius**

.. rst-class:: classref-property-setget

- void **set_emission_ring_radius** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_emission_ring_radius** **(** **)**

The radius of the ring when using the emitter :ref:`EMISSION_SHAPE_RING<class_ParticlesMaterial_constant_EMISSION_SHAPE_RING>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_emission_shape:

.. rst-class:: classref-property

:ref:`EmissionShape<enum_ParticlesMaterial_EmissionShape>` **emission_shape** = ``0``

.. rst-class:: classref-property-setget

- void **set_emission_shape** **(** :ref:`EmissionShape<enum_ParticlesMaterial_EmissionShape>` value **)**
- :ref:`EmissionShape<enum_ParticlesMaterial_EmissionShape>` **get_emission_shape** **(** **)**

Particles will be emitted inside this region. Use :ref:`EmissionShape<enum_ParticlesMaterial_EmissionShape>` constants for values.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_emission_sphere_radius:

.. rst-class:: classref-property

:ref:`float<class_float>` **emission_sphere_radius**

.. rst-class:: classref-property-setget

- void **set_emission_sphere_radius** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_emission_sphere_radius** **(** **)**

The sphere's radius if ``emission_shape`` is set to :ref:`EMISSION_SHAPE_SPHERE<class_ParticlesMaterial_constant_EMISSION_SHAPE_SPHERE>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_flag_align_y:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **flag_align_y** = ``false``

.. rst-class:: classref-property-setget

- void **set_flag** **(** :ref:`Flags<enum_ParticlesMaterial_Flags>` flag, :ref:`bool<class_bool>` enable **)**
- :ref:`bool<class_bool>` **get_flag** **(** :ref:`Flags<enum_ParticlesMaterial_Flags>` flag **)** |const|

Align Y axis of particle with the direction of its velocity.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_flag_disable_z:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **flag_disable_z** = ``false``

.. rst-class:: classref-property-setget

- void **set_flag** **(** :ref:`Flags<enum_ParticlesMaterial_Flags>` flag, :ref:`bool<class_bool>` enable **)**
- :ref:`bool<class_bool>` **get_flag** **(** :ref:`Flags<enum_ParticlesMaterial_Flags>` flag **)** |const|

If ``true``, particles will not move on the z axis.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_flag_rotate_y:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **flag_rotate_y** = ``false``

.. rst-class:: classref-property-setget

- void **set_flag** **(** :ref:`Flags<enum_ParticlesMaterial_Flags>` flag, :ref:`bool<class_bool>` enable **)**
- :ref:`bool<class_bool>` **get_flag** **(** :ref:`Flags<enum_ParticlesMaterial_Flags>` flag **)** |const|

If ``true``, particles rotate around Y axis by :ref:`angle<class_ParticlesMaterial_property_angle>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_flatness:

.. rst-class:: classref-property

:ref:`float<class_float>` **flatness** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_flatness** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_flatness** **(** **)**

Amount of :ref:`spread<class_ParticlesMaterial_property_spread>` along the Y axis.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_gravity:

.. rst-class:: classref-property

:ref:`Vector3<class_Vector3>` **gravity** = ``Vector3( 0, -9.8, 0 )``

.. rst-class:: classref-property-setget

- void **set_gravity** **(** :ref:`Vector3<class_Vector3>` value **)**
- :ref:`Vector3<class_Vector3>` **get_gravity** **(** **)**

Gravity applied to every particle.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_hue_variation:

.. rst-class:: classref-property

:ref:`float<class_float>` **hue_variation** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Initial hue variation applied to each particle.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_hue_variation_curve:

.. rst-class:: classref-property

:ref:`Texture<class_Texture>` **hue_variation_curve**

.. rst-class:: classref-property-setget

- void **set_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`Texture<class_Texture>` texture **)**
- :ref:`Texture<class_Texture>` **get_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Each particle's hue will vary along this :ref:`CurveTexture<class_CurveTexture>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_hue_variation_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **hue_variation_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Hue variation randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_initial_velocity:

.. rst-class:: classref-property

:ref:`float<class_float>` **initial_velocity** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Initial velocity magnitude for each particle. Direction comes from :ref:`spread<class_ParticlesMaterial_property_spread>` and the node's orientation.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_initial_velocity_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **initial_velocity_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Initial velocity randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_lifetime_randomness:

.. rst-class:: classref-property

:ref:`float<class_float>` **lifetime_randomness** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_lifetime_randomness** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_lifetime_randomness** **(** **)**

Particle lifetime randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_linear_accel:

.. rst-class:: classref-property

:ref:`float<class_float>` **linear_accel** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Linear acceleration applied to each particle in the direction of motion.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_linear_accel_curve:

.. rst-class:: classref-property

:ref:`Texture<class_Texture>` **linear_accel_curve**

.. rst-class:: classref-property-setget

- void **set_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`Texture<class_Texture>` texture **)**
- :ref:`Texture<class_Texture>` **get_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Each particle's linear acceleration will vary along this :ref:`CurveTexture<class_CurveTexture>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_linear_accel_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **linear_accel_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Linear acceleration randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_orbit_velocity:

.. rst-class:: classref-property

:ref:`float<class_float>` **orbit_velocity**

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Orbital velocity applied to each particle. Makes the particles circle around origin. Specified in number of full rotations around origin per second.

\ **Note:** Only available when :ref:`flag_disable_z<class_ParticlesMaterial_property_flag_disable_z>` is ``true``.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_orbit_velocity_curve:

.. rst-class:: classref-property

:ref:`Texture<class_Texture>` **orbit_velocity_curve**

.. rst-class:: classref-property-setget

- void **set_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`Texture<class_Texture>` texture **)**
- :ref:`Texture<class_Texture>` **get_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Each particle's orbital velocity will vary along this :ref:`CurveTexture<class_CurveTexture>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_orbit_velocity_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **orbit_velocity_random**

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Orbital velocity randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_radial_accel:

.. rst-class:: classref-property

:ref:`float<class_float>` **radial_accel** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Radial acceleration applied to each particle. Makes particle accelerate away from origin.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_radial_accel_curve:

.. rst-class:: classref-property

:ref:`Texture<class_Texture>` **radial_accel_curve**

.. rst-class:: classref-property-setget

- void **set_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`Texture<class_Texture>` texture **)**
- :ref:`Texture<class_Texture>` **get_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Each particle's radial acceleration will vary along this :ref:`CurveTexture<class_CurveTexture>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_radial_accel_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **radial_accel_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Radial acceleration randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_scale:

.. rst-class:: classref-property

:ref:`float<class_float>` **scale** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Initial scale applied to each particle. This can be set to a negative value to flip the particle on all axes.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_scale_curve:

.. rst-class:: classref-property

:ref:`Texture<class_Texture>` **scale_curve**

.. rst-class:: classref-property-setget

- void **set_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`Texture<class_Texture>` texture **)**
- :ref:`Texture<class_Texture>` **get_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Each particle's scale will vary along this :ref:`CurveTexture<class_CurveTexture>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_scale_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **scale_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Scale randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_spread:

.. rst-class:: classref-property

:ref:`float<class_float>` **spread** = ``45.0``

.. rst-class:: classref-property-setget

- void **set_spread** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_spread** **(** **)**

Each particle's initial direction range from ``+spread`` to ``-spread`` degrees.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_tangential_accel:

.. rst-class:: classref-property

:ref:`float<class_float>` **tangential_accel** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Tangential acceleration applied to each particle. Tangential acceleration is perpendicular to the particle's velocity giving the particles a swirling motion.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_tangential_accel_curve:

.. rst-class:: classref-property

:ref:`Texture<class_Texture>` **tangential_accel_curve**

.. rst-class:: classref-property-setget

- void **set_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`Texture<class_Texture>` texture **)**
- :ref:`Texture<class_Texture>` **get_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Each particle's tangential acceleration will vary along this :ref:`CurveTexture<class_CurveTexture>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_tangential_accel_random:

.. rst-class:: classref-property

:ref:`float<class_float>` **tangential_accel_random** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` randomness **)**
- :ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Tangential acceleration randomness ratio.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_trail_color_modifier:

.. rst-class:: classref-property

:ref:`GradientTexture<class_GradientTexture>` **trail_color_modifier**

.. rst-class:: classref-property-setget

- void **set_trail_color_modifier** **(** :ref:`GradientTexture<class_GradientTexture>` value **)**
- :ref:`GradientTexture<class_GradientTexture>` **get_trail_color_modifier** **(** **)**

Trail particles' color will vary along this :ref:`GradientTexture<class_GradientTexture>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_trail_divisor:

.. rst-class:: classref-property

:ref:`int<class_int>` **trail_divisor** = ``1``

.. rst-class:: classref-property-setget

- void **set_trail_divisor** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_trail_divisor** **(** **)**

Emitter will emit ``amount`` divided by ``trail_divisor`` particles. The remaining particles will be used as trail(s).

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_property_trail_size_modifier:

.. rst-class:: classref-property

:ref:`CurveTexture<class_CurveTexture>` **trail_size_modifier**

.. rst-class:: classref-property-setget

- void **set_trail_size_modifier** **(** :ref:`CurveTexture<class_CurveTexture>` value **)**
- :ref:`CurveTexture<class_CurveTexture>` **get_trail_size_modifier** **(** **)**

Trail particles' size will vary along this :ref:`CurveTexture<class_CurveTexture>`.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_ParticlesMaterial_method_get_flag:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **get_flag** **(** :ref:`Flags<enum_ParticlesMaterial_Flags>` flag **)** |const|

Returns ``true`` if the specified flag is enabled.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_method_get_param:

.. rst-class:: classref-method

:ref:`float<class_float>` **get_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Returns the value of the specified parameter.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_method_get_param_randomness:

.. rst-class:: classref-method

:ref:`float<class_float>` **get_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Returns the randomness ratio associated with the specified parameter.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_method_get_param_texture:

.. rst-class:: classref-method

:ref:`Texture<class_Texture>` **get_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param **)** |const|

Returns the :ref:`Texture<class_Texture>` used by the specified parameter.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_method_set_flag:

.. rst-class:: classref-method

void **set_flag** **(** :ref:`Flags<enum_ParticlesMaterial_Flags>` flag, :ref:`bool<class_bool>` enable **)**

If ``true``, enables the specified flag. See :ref:`Flags<enum_ParticlesMaterial_Flags>` for options.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_method_set_param:

.. rst-class:: classref-method

void **set_param** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` value **)**

Sets the specified :ref:`Parameter<enum_ParticlesMaterial_Parameter>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_method_set_param_randomness:

.. rst-class:: classref-method

void **set_param_randomness** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`float<class_float>` randomness **)**

Sets the randomness ratio for the specified :ref:`Parameter<enum_ParticlesMaterial_Parameter>`.

.. rst-class:: classref-item-separator

----

.. _class_ParticlesMaterial_method_set_param_texture:

.. rst-class:: classref-method

void **set_param_texture** **(** :ref:`Parameter<enum_ParticlesMaterial_Parameter>` param, :ref:`Texture<class_Texture>` texture **)**

Sets the :ref:`Texture<class_Texture>` for the specified :ref:`Parameter<enum_ParticlesMaterial_Parameter>`.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
