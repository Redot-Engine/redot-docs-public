:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Redot engine sources.
.. Generator: https://github.com/redot-engine/redot/tree/3.6/doc/tools/make_rst.py.
.. XML source: https://github.com/redot-engine/redot/tree/3.6/doc/classes/Button.xml.

.. _class_Button:

Button
======

**Inherits:** :ref:`BaseButton<class_BaseButton>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`CheckBox<class_CheckBox>`, :ref:`CheckButton<class_CheckButton>`, :ref:`ColorPickerButton<class_ColorPickerButton>`, :ref:`MenuButton<class_MenuButton>`, :ref:`OptionButton<class_OptionButton>`, :ref:`ToolButton<class_ToolButton>`

Standard themed Button.

.. rst-class:: classref-introduction-group

Description
-----------

Button is the standard themed button. It can contain text and an icon, and will display them according to the current :ref:`Theme<class_Theme>`.

\ **Example of creating a button and assigning an action when pressed by code:**\ 

::

    func _ready():
        var button = Button.new()
        button.text = "Click me"
        button.connect("pressed", self, "_button_pressed")
        add_child(button)
    
    func _button_pressed():
        print("Hello world!")

Buttons (like all Control nodes) can also be created in the editor, but some situations may require creating them from code.

See also :ref:`BaseButton<class_BaseButton>` which contains common properties and methods associated with this node.

\ **Note:** Buttons do not interpret touch input and therefore don't support multitouch, since mouse emulation can only press one button at a given time. Use :ref:`TouchScreenButton<class_TouchScreenButton>` for buttons that trigger gameplay movement or actions, as :ref:`TouchScreenButton<class_TouchScreenButton>` supports multitouch.

.. rst-class:: classref-introduction-group

Tutorials
---------

- `2D Dodge The Creeps Demo <https://redotengine.org/asset-library/asset/515>`__

- `OS Test Demo <https://redotengine.org/asset-library/asset/677>`__

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-----------------------------------------+-------------------------------------------------------+-----------+
   | :ref:`TextAlign<enum_Button_TextAlign>` | :ref:`align<class_Button_property_align>`             | ``1``     |
   +-----------------------------------------+-------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                 | :ref:`clip_text<class_Button_property_clip_text>`     | ``false`` |
   +-----------------------------------------+-------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                 | :ref:`expand_icon<class_Button_property_expand_icon>` | ``false`` |
   +-----------------------------------------+-------------------------------------------------------+-----------+
   | :ref:`bool<class_bool>`                 | :ref:`flat<class_Button_property_flat>`               | ``false`` |
   +-----------------------------------------+-------------------------------------------------------+-----------+
   | :ref:`Texture<class_Texture>`           | :ref:`icon<class_Button_property_icon>`               |           |
   +-----------------------------------------+-------------------------------------------------------+-----------+
   | :ref:`TextAlign<enum_Button_TextAlign>` | :ref:`icon_align<class_Button_property_icon_align>`   | ``0``     |
   +-----------------------------------------+-------------------------------------------------------+-----------+
   | :ref:`String<class_String>`             | :ref:`text<class_Button_property_text>`               | ``""``    |
   +-----------------------------------------+-------------------------------------------------------+-----------+

.. rst-class:: classref-reftable-group

Theme Properties
----------------

.. table::
   :widths: auto

   +---------------------------------+------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`Color<class_Color>`       | :ref:`font_color<class_Button_theme_color_font_color>`                             | ``Color( 0.88, 0.88, 0.88, 1 )`` |
   +---------------------------------+------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`Color<class_Color>`       | :ref:`font_color_disabled<class_Button_theme_color_font_color_disabled>`           | ``Color( 0.9, 0.9, 0.9, 0.2 )``  |
   +---------------------------------+------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`Color<class_Color>`       | :ref:`font_color_focus<class_Button_theme_color_font_color_focus>`                 | ``Color( 0.94, 0.94, 0.94, 1 )`` |
   +---------------------------------+------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`Color<class_Color>`       | :ref:`font_color_hover<class_Button_theme_color_font_color_hover>`                 | ``Color( 0.94, 0.94, 0.94, 1 )`` |
   +---------------------------------+------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`Color<class_Color>`       | :ref:`font_color_hover_pressed<class_Button_theme_color_font_color_hover_pressed>` | ``Color( 1, 1, 1, 1 )``          |
   +---------------------------------+------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`Color<class_Color>`       | :ref:`font_color_pressed<class_Button_theme_color_font_color_pressed>`             | ``Color( 1, 1, 1, 1 )``          |
   +---------------------------------+------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`Color<class_Color>`       | :ref:`icon_color_disabled<class_Button_theme_color_icon_color_disabled>`           | ``Color( 1, 1, 1, 0.4 )``        |
   +---------------------------------+------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`Color<class_Color>`       | :ref:`icon_color_focus<class_Button_theme_color_icon_color_focus>`                 | ``Color( 1, 1, 1, 1 )``          |
   +---------------------------------+------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`Color<class_Color>`       | :ref:`icon_color_hover<class_Button_theme_color_icon_color_hover>`                 | ``Color( 1, 1, 1, 1 )``          |
   +---------------------------------+------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`Color<class_Color>`       | :ref:`icon_color_hover_pressed<class_Button_theme_color_icon_color_hover_pressed>` | ``Color( 1, 1, 1, 1 )``          |
   +---------------------------------+------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`Color<class_Color>`       | :ref:`icon_color_normal<class_Button_theme_color_icon_color_normal>`               | ``Color( 1, 1, 1, 1 )``          |
   +---------------------------------+------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`Color<class_Color>`       | :ref:`icon_color_pressed<class_Button_theme_color_icon_color_pressed>`             | ``Color( 1, 1, 1, 1 )``          |
   +---------------------------------+------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`int<class_int>`           | :ref:`hseparation<class_Button_theme_constant_hseparation>`                        | ``2``                            |
   +---------------------------------+------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`Font<class_Font>`         | :ref:`font<class_Button_theme_font_font>`                                          |                                  |
   +---------------------------------+------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`StyleBox<class_StyleBox>` | :ref:`disabled<class_Button_theme_style_disabled>`                                 |                                  |
   +---------------------------------+------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`StyleBox<class_StyleBox>` | :ref:`focus<class_Button_theme_style_focus>`                                       |                                  |
   +---------------------------------+------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`StyleBox<class_StyleBox>` | :ref:`hover<class_Button_theme_style_hover>`                                       |                                  |
   +---------------------------------+------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`StyleBox<class_StyleBox>` | :ref:`normal<class_Button_theme_style_normal>`                                     |                                  |
   +---------------------------------+------------------------------------------------------------------------------------+----------------------------------+
   | :ref:`StyleBox<class_StyleBox>` | :ref:`pressed<class_Button_theme_style_pressed>`                                   |                                  |
   +---------------------------------+------------------------------------------------------------------------------------+----------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Enumerations
------------

.. _enum_Button_TextAlign:

.. rst-class:: classref-enumeration

enum **TextAlign**:

.. _class_Button_constant_ALIGN_LEFT:

.. rst-class:: classref-enumeration-constant

:ref:`TextAlign<enum_Button_TextAlign>` **ALIGN_LEFT** = ``0``

Align the text to the left.

.. _class_Button_constant_ALIGN_CENTER:

.. rst-class:: classref-enumeration-constant

:ref:`TextAlign<enum_Button_TextAlign>` **ALIGN_CENTER** = ``1``

Align the text to the center.

.. _class_Button_constant_ALIGN_RIGHT:

.. rst-class:: classref-enumeration-constant

:ref:`TextAlign<enum_Button_TextAlign>` **ALIGN_RIGHT** = ``2``

Align the text to the right.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_Button_property_align:

.. rst-class:: classref-property

:ref:`TextAlign<enum_Button_TextAlign>` **align** = ``1``

.. rst-class:: classref-property-setget

- void **set_text_align** **(** :ref:`TextAlign<enum_Button_TextAlign>` value **)**
- :ref:`TextAlign<enum_Button_TextAlign>` **get_text_align** **(** **)**

Text alignment policy for the button's text, use one of the :ref:`TextAlign<enum_Button_TextAlign>` constants.

.. rst-class:: classref-item-separator

----

.. _class_Button_property_clip_text:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **clip_text** = ``false``

.. rst-class:: classref-property-setget

- void **set_clip_text** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_clip_text** **(** **)**

When this property is enabled, text that is too large to fit the button is clipped, when disabled the Button will always be wide enough to hold the text.

.. rst-class:: classref-item-separator

----

.. _class_Button_property_expand_icon:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **expand_icon** = ``false``

.. rst-class:: classref-property-setget

- void **set_expand_icon** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_expand_icon** **(** **)**

When enabled, the button's icon will expand/shrink to fit the button's size while keeping its aspect.

.. rst-class:: classref-item-separator

----

.. _class_Button_property_flat:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **flat** = ``false``

.. rst-class:: classref-property-setget

- void **set_flat** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_flat** **(** **)**

Flat buttons don't display decoration.

.. rst-class:: classref-item-separator

----

.. _class_Button_property_icon:

.. rst-class:: classref-property

:ref:`Texture<class_Texture>` **icon**

.. rst-class:: classref-property-setget

- void **set_button_icon** **(** :ref:`Texture<class_Texture>` value **)**
- :ref:`Texture<class_Texture>` **get_button_icon** **(** **)**

Button's icon, if text is present the icon will be placed before the text.

To edit margin and spacing of the icon, use ``hseparation`` theme property of **Button** and ``content_margin_*`` properties of the used :ref:`StyleBox<class_StyleBox>`\ es.

.. rst-class:: classref-item-separator

----

.. _class_Button_property_icon_align:

.. rst-class:: classref-property

:ref:`TextAlign<enum_Button_TextAlign>` **icon_align** = ``0``

.. rst-class:: classref-property-setget

- void **set_icon_align** **(** :ref:`TextAlign<enum_Button_TextAlign>` value **)**
- :ref:`TextAlign<enum_Button_TextAlign>` **get_icon_align** **(** **)**

Specifies if the icon should be aligned to the left, right, or center of a button. Uses the same :ref:`TextAlign<enum_Button_TextAlign>` constants as the text alignment. If centered, text will draw on top of the icon.

.. rst-class:: classref-item-separator

----

.. _class_Button_property_text:

.. rst-class:: classref-property

:ref:`String<class_String>` **text** = ``""``

.. rst-class:: classref-property-setget

- void **set_text** **(** :ref:`String<class_String>` value **)**
- :ref:`String<class_String>` **get_text** **(** **)**

The button's text that will be displayed inside the button's area.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Theme Property Descriptions
---------------------------

.. _class_Button_theme_color_font_color:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **font_color** = ``Color( 0.88, 0.88, 0.88, 1 )``

Default text :ref:`Color<class_Color>` of the **Button**.

.. rst-class:: classref-item-separator

----

.. _class_Button_theme_color_font_color_disabled:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **font_color_disabled** = ``Color( 0.9, 0.9, 0.9, 0.2 )``

Text :ref:`Color<class_Color>` used when the **Button** is disabled.

.. rst-class:: classref-item-separator

----

.. _class_Button_theme_color_font_color_focus:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **font_color_focus** = ``Color( 0.94, 0.94, 0.94, 1 )``

Text :ref:`Color<class_Color>` used when the **Button** is focused. Only replaces the normal text color of the button. Disabled, hovered, and pressed states take precedence over this color.

.. rst-class:: classref-item-separator

----

.. _class_Button_theme_color_font_color_hover:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **font_color_hover** = ``Color( 0.94, 0.94, 0.94, 1 )``

Text :ref:`Color<class_Color>` used when the **Button** is being hovered.

.. rst-class:: classref-item-separator

----

.. _class_Button_theme_color_font_color_hover_pressed:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **font_color_hover_pressed** = ``Color( 1, 1, 1, 1 )``

Text :ref:`Color<class_Color>` used when the **Button** is being hovered and pressed.

.. rst-class:: classref-item-separator

----

.. _class_Button_theme_color_font_color_pressed:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **font_color_pressed** = ``Color( 1, 1, 1, 1 )``

Text :ref:`Color<class_Color>` used when the **Button** is being pressed.

.. rst-class:: classref-item-separator

----

.. _class_Button_theme_color_icon_color_disabled:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **icon_color_disabled** = ``Color( 1, 1, 1, 0.4 )``

Icon modulate :ref:`Color<class_Color>` used when the **Button** is disabled.

.. rst-class:: classref-item-separator

----

.. _class_Button_theme_color_icon_color_focus:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **icon_color_focus** = ``Color( 1, 1, 1, 1 )``

Icon modulate :ref:`Color<class_Color>` used when the **Button** is focused. Only replaces the normal modulate color of the button. Disabled, hovered, and pressed states take precedence over this color.

.. rst-class:: classref-item-separator

----

.. _class_Button_theme_color_icon_color_hover:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **icon_color_hover** = ``Color( 1, 1, 1, 1 )``

Icon modulate :ref:`Color<class_Color>` used when the **Button** is being hovered.

.. rst-class:: classref-item-separator

----

.. _class_Button_theme_color_icon_color_hover_pressed:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **icon_color_hover_pressed** = ``Color( 1, 1, 1, 1 )``

Icon modulate :ref:`Color<class_Color>` used when the **Button** is being hovered and pressed.

.. rst-class:: classref-item-separator

----

.. _class_Button_theme_color_icon_color_normal:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **icon_color_normal** = ``Color( 1, 1, 1, 1 )``

Default icon modulate :ref:`Color<class_Color>` of the **Button**.

.. rst-class:: classref-item-separator

----

.. _class_Button_theme_color_icon_color_pressed:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **icon_color_pressed** = ``Color( 1, 1, 1, 1 )``

Icon modulate :ref:`Color<class_Color>` used when the **Button** is being pressed.

.. rst-class:: classref-item-separator

----

.. _class_Button_theme_constant_hseparation:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **hseparation** = ``2``

The horizontal space between **Button**'s icon and text.

.. rst-class:: classref-item-separator

----

.. _class_Button_theme_font_font:

.. rst-class:: classref-themeproperty

:ref:`Font<class_Font>` **font**

:ref:`Font<class_Font>` of the **Button**'s text.

.. rst-class:: classref-item-separator

----

.. _class_Button_theme_style_disabled:

.. rst-class:: classref-themeproperty

:ref:`StyleBox<class_StyleBox>` **disabled**

:ref:`StyleBox<class_StyleBox>` used when the **Button** is disabled.

.. rst-class:: classref-item-separator

----

.. _class_Button_theme_style_focus:

.. rst-class:: classref-themeproperty

:ref:`StyleBox<class_StyleBox>` **focus**

:ref:`StyleBox<class_StyleBox>` used when the **Button** is focused. It is displayed over the current :ref:`StyleBox<class_StyleBox>`, so using :ref:`StyleBoxEmpty<class_StyleBoxEmpty>` will just disable the focus visual effect.

.. rst-class:: classref-item-separator

----

.. _class_Button_theme_style_hover:

.. rst-class:: classref-themeproperty

:ref:`StyleBox<class_StyleBox>` **hover**

:ref:`StyleBox<class_StyleBox>` used when the **Button** is being hovered.

.. rst-class:: classref-item-separator

----

.. _class_Button_theme_style_normal:

.. rst-class:: classref-themeproperty

:ref:`StyleBox<class_StyleBox>` **normal**

Default :ref:`StyleBox<class_StyleBox>` for the **Button**.

.. rst-class:: classref-item-separator

----

.. _class_Button_theme_style_pressed:

.. rst-class:: classref-themeproperty

:ref:`StyleBox<class_StyleBox>` **pressed**

:ref:`StyleBox<class_StyleBox>` used when the **Button** is being pressed.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
