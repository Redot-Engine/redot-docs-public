:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Redot engine sources.
.. Generator: https://github.com/redot-engine/redot/tree/3.6/doc/tools/make_rst.py.
.. XML source: https://github.com/redot-engine/redot/tree/3.6/doc/classes/NavigationObstacle2D.xml.

.. _class_NavigationObstacle2D:

NavigationObstacle2D
====================

**Inherits:** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

2D obstacle used in navigation for collision avoidance.

.. rst-class:: classref-introduction-group

Description
-----------

2D obstacle used in navigation for collision avoidance. The obstacle needs navigation data to work correctly. This can be done by having the obstacle as a child of a :ref:`Navigation2D<class_Navigation2D>` node, or using :ref:`set_navigation<class_NavigationObstacle2D_method_set_navigation>`. **NavigationObstacle2D** is physics safe.

Obstacles **don't** change the resulting path from the pathfinding, they only affect the navigation agent movement in a radius. Therefore, using obstacles for the static walls in your level won't work because those walls don't exist in the pathfinding. The navigation agent will be pushed in a semi-random direction away while moving inside that radius. Obstacles are intended as a last resort option for constantly moving objects that cannot be (re)baked to a navigation mesh efficiently.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +---------------------------+-----------------------------------------------------------------------------+----------+
   | :ref:`bool<class_bool>`   | :ref:`estimate_radius<class_NavigationObstacle2D_property_estimate_radius>` | ``true`` |
   +---------------------------+-----------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`radius<class_NavigationObstacle2D_property_radius>`                   | ``1.0``  |
   +---------------------------+-----------------------------------------------------------------------------+----------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-------------------------+------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Node<class_Node>` | :ref:`get_navigation<class_NavigationObstacle2D_method_get_navigation>` **(** **)** |const|                            |
   +-------------------------+------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`   | :ref:`get_rid<class_NavigationObstacle2D_method_get_rid>` **(** **)** |const|                                          |
   +-------------------------+------------------------------------------------------------------------------------------------------------------------+
   | void                    | :ref:`set_navigation<class_NavigationObstacle2D_method_set_navigation>` **(** :ref:`Node<class_Node>` navigation **)** |
   +-------------------------+------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_NavigationObstacle2D_property_estimate_radius:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **estimate_radius** = ``true``

.. rst-class:: classref-property-setget

- void **set_estimate_radius** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_radius_estimated** **(** **)**

Enables radius estimation algorithm which uses parent's collision shapes to determine the obstacle radius.

.. rst-class:: classref-item-separator

----

.. _class_NavigationObstacle2D_property_radius:

.. rst-class:: classref-property

:ref:`float<class_float>` **radius** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_radius** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_radius** **(** **)**

The radius of the agent. Used only if :ref:`estimate_radius<class_NavigationObstacle2D_property_estimate_radius>` is set to ``false``.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_NavigationObstacle2D_method_get_navigation:

.. rst-class:: classref-method

:ref:`Node<class_Node>` **get_navigation** **(** **)** |const|

Returns the :ref:`Navigation2D<class_Navigation2D>` node that the obstacle is using for its navigation system.

.. rst-class:: classref-item-separator

----

.. _class_NavigationObstacle2D_method_get_rid:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **get_rid** **(** **)** |const|

Returns the :ref:`RID<class_RID>` of this obstacle on the :ref:`Navigation2DServer<class_Navigation2DServer>`.

.. rst-class:: classref-item-separator

----

.. _class_NavigationObstacle2D_method_set_navigation:

.. rst-class:: classref-method

void **set_navigation** **(** :ref:`Node<class_Node>` navigation **)**

Sets the :ref:`Navigation2D<class_Navigation2D>` node used by the obstacle. Useful when you don't want to make the obstacle a child of a :ref:`Navigation2D<class_Navigation2D>` node.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
