:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Redot engine sources.
.. Generator: https://github.com/redot-engine/redot/tree/3.6/doc/tools/make_rst.py.
.. XML source: https://github.com/redot-engine/redot/tree/3.6/doc/classes/LineEdit.xml.

.. _class_LineEdit:

LineEdit
========

**Inherits:** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Control that provides single-line string editing.

.. rst-class:: classref-introduction-group

Description
-----------

LineEdit provides a single-line string editor, used for text fields.

It features many built-in shortcuts which will always be available (``Ctrl`` here maps to ``Command`` on macOS):

- :kbd:`Ctrl + C`: Copy

- :kbd:`Ctrl + X`: Cut

- :kbd:`Ctrl + V or Ctrl + Y`: Paste/"yank"

- :kbd:`Ctrl + Z`: Undo

- :kbd:`Ctrl + Shift + Z`: Redo

- :kbd:`Ctrl + U`: Delete text from the cursor position to the beginning of the line

- :kbd:`Ctrl + K`: Delete text from the cursor position to the end of the line

- :kbd:`Ctrl + A`: Select all text

- :kbd:`Up Arrow`/:kbd:`Down arrow`: Move the cursor to the beginning/end of the line

On macOS, some extra keyboard shortcuts are available:

- :kbd:`Ctrl + F`: Same as :kbd:`Right Arrow`, move the cursor one character right

- :kbd:`Ctrl + B`: Same as :kbd:`Left Arrow`, move the cursor one character left

- :kbd:`Ctrl + P`: Same as :kbd:`Up Arrow`, move the cursor to the previous line

- :kbd:`Ctrl + N`: Same as :kbd:`Down Arrow`, move the cursor to the next line

- :kbd:`Ctrl + D`: Same as :kbd:`Delete`, delete the character on the right side of cursor

- :kbd:`Ctrl + H`: Same as :kbd:`Backspace`, delete the character on the left side of the cursor

- :kbd:`Cmd + Left arrow`: Same as :kbd:`Home`, move the cursor to the beginning of the line

- :kbd:`Cmd + Right arrow`: Same as :kbd:`End`, move the cursor to the end of the line

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`Align<enum_LineEdit_Align>`                             | :ref:`align<class_LineEdit_property_align>`                                                   | ``0``                                                                               |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                       | :ref:`caret_blink<class_LineEdit_property_caret_blink>`                                       | ``false``                                                                           |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`                                     | :ref:`caret_blink_speed<class_LineEdit_property_caret_blink_speed>`                           | ``0.65``                                                                            |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                         | :ref:`caret_position<class_LineEdit_property_caret_position>`                                 | ``0``                                                                               |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                       | :ref:`clear_button_enabled<class_LineEdit_property_clear_button_enabled>`                     | ``false``                                                                           |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                       | :ref:`context_menu_enabled<class_LineEdit_property_context_menu_enabled>`                     | ``true``                                                                            |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                       | :ref:`deselect_on_focus_loss_enabled<class_LineEdit_property_deselect_on_focus_loss_enabled>` | ``true``                                                                            |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                       | :ref:`editable<class_LineEdit_property_editable>`                                             | ``true``                                                                            |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                       | :ref:`expand_to_text_length<class_LineEdit_property_expand_to_text_length>`                   | ``false``                                                                           |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`FocusMode<enum_Control_FocusMode>`                      | focus_mode                                                                                    | ``2`` (overrides :ref:`Control<class_Control_property_focus_mode>`)                 |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                         | :ref:`max_length<class_LineEdit_property_max_length>`                                         | ``0``                                                                               |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                       | :ref:`middle_mouse_paste_enabled<class_LineEdit_property_middle_mouse_paste_enabled>`         | ``true``                                                                            |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`CursorShape<enum_Control_CursorShape>`                  | mouse_default_cursor_shape                                                                    | ``1`` (overrides :ref:`Control<class_Control_property_mouse_default_cursor_shape>`) |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`                                     | :ref:`placeholder_alpha<class_LineEdit_property_placeholder_alpha>`                           | ``0.6``                                                                             |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`                                   | :ref:`placeholder_text<class_LineEdit_property_placeholder_text>`                             | ``""``                                                                              |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`Texture<class_Texture>`                                 | :ref:`right_icon<class_LineEdit_property_right_icon>`                                         |                                                                                     |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                       | :ref:`secret<class_LineEdit_property_secret>`                                                 | ``false``                                                                           |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`                                   | :ref:`secret_character<class_LineEdit_property_secret_character>`                             | ``"*"``                                                                             |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                       | :ref:`selecting_enabled<class_LineEdit_property_selecting_enabled>`                           | ``true``                                                                            |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                       | :ref:`shortcut_keys_enabled<class_LineEdit_property_shortcut_keys_enabled>`                   | ``true``                                                                            |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`                                   | :ref:`text<class_LineEdit_property_text>`                                                     | ``""``                                                                              |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                       | :ref:`virtual_keyboard_enabled<class_LineEdit_property_virtual_keyboard_enabled>`             | ``true``                                                                            |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+
   | :ref:`VirtualKeyboardType<enum_LineEdit_VirtualKeyboardType>` | :ref:`virtual_keyboard_type<class_LineEdit_property_virtual_keyboard_type>`                   | ``0``                                                                               |
   +---------------------------------------------------------------+-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | void                              | :ref:`append_at_cursor<class_LineEdit_method_append_at_cursor>` **(** :ref:`String<class_String>` text **)**                         |
   +-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | void                              | :ref:`clear<class_LineEdit_method_clear>` **(** **)**                                                                                |
   +-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | void                              | :ref:`delete_char_at_cursor<class_LineEdit_method_delete_char_at_cursor>` **(** **)**                                                |
   +-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | void                              | :ref:`delete_text<class_LineEdit_method_delete_text>` **(** :ref:`int<class_int>` from_column, :ref:`int<class_int>` to_column **)** |
   +-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | void                              | :ref:`deselect<class_LineEdit_method_deselect>` **(** **)**                                                                          |
   +-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`PopupMenu<class_PopupMenu>` | :ref:`get_menu<class_LineEdit_method_get_menu>` **(** **)** |const|                                                                  |
   +-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`             | :ref:`get_scroll_offset<class_LineEdit_method_get_scroll_offset>` **(** **)** |const|                                                |
   +-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`             | :ref:`get_selection_from_column<class_LineEdit_method_get_selection_from_column>` **(** **)** |const|                                |
   +-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`             | :ref:`get_selection_to_column<class_LineEdit_method_get_selection_to_column>` **(** **)** |const|                                    |
   +-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`           | :ref:`has_selection<class_LineEdit_method_has_selection>` **(** **)** |const|                                                        |
   +-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | void                              | :ref:`menu_option<class_LineEdit_method_menu_option>` **(** :ref:`int<class_int>` option **)**                                       |
   +-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | void                              | :ref:`select<class_LineEdit_method_select>` **(** :ref:`int<class_int>` from=0, :ref:`int<class_int>` to=-1 **)**                    |
   +-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | void                              | :ref:`select_all<class_LineEdit_method_select_all>` **(** **)**                                                                      |
   +-----------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-reftable-group

Theme Properties
----------------

.. table::
   :widths: auto

   +---------------------------------+------------------------------------------------------------------------------------------+------------------------------------+
   | :ref:`Color<class_Color>`       | :ref:`clear_button_color<class_LineEdit_theme_color_clear_button_color>`                 | ``Color( 0.88, 0.88, 0.88, 1 )``   |
   +---------------------------------+------------------------------------------------------------------------------------------+------------------------------------+
   | :ref:`Color<class_Color>`       | :ref:`clear_button_color_pressed<class_LineEdit_theme_color_clear_button_color_pressed>` | ``Color( 1, 1, 1, 1 )``            |
   +---------------------------------+------------------------------------------------------------------------------------------+------------------------------------+
   | :ref:`Color<class_Color>`       | :ref:`cursor_color<class_LineEdit_theme_color_cursor_color>`                             | ``Color( 0.94, 0.94, 0.94, 1 )``   |
   +---------------------------------+------------------------------------------------------------------------------------------+------------------------------------+
   | :ref:`Color<class_Color>`       | :ref:`font_color<class_LineEdit_theme_color_font_color>`                                 | ``Color( 0.88, 0.88, 0.88, 1 )``   |
   +---------------------------------+------------------------------------------------------------------------------------------+------------------------------------+
   | :ref:`Color<class_Color>`       | :ref:`font_color_selected<class_LineEdit_theme_color_font_color_selected>`               | ``Color( 0, 0, 0, 1 )``            |
   +---------------------------------+------------------------------------------------------------------------------------------+------------------------------------+
   | :ref:`Color<class_Color>`       | :ref:`font_color_uneditable<class_LineEdit_theme_color_font_color_uneditable>`           | ``Color( 0.88, 0.88, 0.88, 0.5 )`` |
   +---------------------------------+------------------------------------------------------------------------------------------+------------------------------------+
   | :ref:`Color<class_Color>`       | :ref:`selection_color<class_LineEdit_theme_color_selection_color>`                       | ``Color( 0.49, 0.49, 0.49, 1 )``   |
   +---------------------------------+------------------------------------------------------------------------------------------+------------------------------------+
   | :ref:`int<class_int>`           | :ref:`minimum_spaces<class_LineEdit_theme_constant_minimum_spaces>`                      | ``12``                             |
   +---------------------------------+------------------------------------------------------------------------------------------+------------------------------------+
   | :ref:`Font<class_Font>`         | :ref:`font<class_LineEdit_theme_font_font>`                                              |                                    |
   +---------------------------------+------------------------------------------------------------------------------------------+------------------------------------+
   | :ref:`Texture<class_Texture>`   | :ref:`clear<class_LineEdit_theme_icon_clear>`                                            |                                    |
   +---------------------------------+------------------------------------------------------------------------------------------+------------------------------------+
   | :ref:`StyleBox<class_StyleBox>` | :ref:`focus<class_LineEdit_theme_style_focus>`                                           |                                    |
   +---------------------------------+------------------------------------------------------------------------------------------+------------------------------------+
   | :ref:`StyleBox<class_StyleBox>` | :ref:`normal<class_LineEdit_theme_style_normal>`                                         |                                    |
   +---------------------------------+------------------------------------------------------------------------------------------+------------------------------------+
   | :ref:`StyleBox<class_StyleBox>` | :ref:`read_only<class_LineEdit_theme_style_read_only>`                                   |                                    |
   +---------------------------------+------------------------------------------------------------------------------------------+------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Signals
-------

.. _class_LineEdit_signal_text_change_rejected:

.. rst-class:: classref-signal

**text_change_rejected** **(** :ref:`String<class_String>` rejected_substring **)**

Emitted when appending text that overflows the :ref:`max_length<class_LineEdit_property_max_length>`. The appended text is truncated to fit :ref:`max_length<class_LineEdit_property_max_length>`, and the part that couldn't fit is passed as the ``rejected_substring`` argument.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_signal_text_changed:

.. rst-class:: classref-signal

**text_changed** **(** :ref:`String<class_String>` new_text **)**

Emitted when the text changes.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_signal_text_entered:

.. rst-class:: classref-signal

**text_entered** **(** :ref:`String<class_String>` new_text **)**

Emitted when the user presses :ref:`@GlobalScope.KEY_ENTER<class_@GlobalScope_constant_KEY_ENTER>` on the **LineEdit**.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Enumerations
------------

.. _enum_LineEdit_Align:

.. rst-class:: classref-enumeration

enum **Align**:

.. _class_LineEdit_constant_ALIGN_LEFT:

.. rst-class:: classref-enumeration-constant

:ref:`Align<enum_LineEdit_Align>` **ALIGN_LEFT** = ``0``

Aligns the text on the left-hand side of the **LineEdit**.

.. _class_LineEdit_constant_ALIGN_CENTER:

.. rst-class:: classref-enumeration-constant

:ref:`Align<enum_LineEdit_Align>` **ALIGN_CENTER** = ``1``

Centers the text in the middle of the **LineEdit**.

.. _class_LineEdit_constant_ALIGN_RIGHT:

.. rst-class:: classref-enumeration-constant

:ref:`Align<enum_LineEdit_Align>` **ALIGN_RIGHT** = ``2``

Aligns the text on the right-hand side of the **LineEdit**.

.. _class_LineEdit_constant_ALIGN_FILL:

.. rst-class:: classref-enumeration-constant

:ref:`Align<enum_LineEdit_Align>` **ALIGN_FILL** = ``3``

Stretches whitespaces to fit the **LineEdit**'s width.

.. rst-class:: classref-item-separator

----

.. _enum_LineEdit_MenuItems:

.. rst-class:: classref-enumeration

enum **MenuItems**:

.. _class_LineEdit_constant_MENU_CUT:

.. rst-class:: classref-enumeration-constant

:ref:`MenuItems<enum_LineEdit_MenuItems>` **MENU_CUT** = ``0``

Cuts (copies and clears) the selected text.

.. _class_LineEdit_constant_MENU_COPY:

.. rst-class:: classref-enumeration-constant

:ref:`MenuItems<enum_LineEdit_MenuItems>` **MENU_COPY** = ``1``

Copies the selected text.

.. _class_LineEdit_constant_MENU_PASTE:

.. rst-class:: classref-enumeration-constant

:ref:`MenuItems<enum_LineEdit_MenuItems>` **MENU_PASTE** = ``2``

Pastes the clipboard text over the selected text (or at the cursor's position).

Non-printable escape characters are automatically stripped from the OS clipboard via :ref:`String.strip_escapes<class_String_method_strip_escapes>`.

.. _class_LineEdit_constant_MENU_CLEAR:

.. rst-class:: classref-enumeration-constant

:ref:`MenuItems<enum_LineEdit_MenuItems>` **MENU_CLEAR** = ``3``

Erases the whole **LineEdit** text.

.. _class_LineEdit_constant_MENU_SELECT_ALL:

.. rst-class:: classref-enumeration-constant

:ref:`MenuItems<enum_LineEdit_MenuItems>` **MENU_SELECT_ALL** = ``4``

Selects the whole **LineEdit** text.

.. _class_LineEdit_constant_MENU_UNDO:

.. rst-class:: classref-enumeration-constant

:ref:`MenuItems<enum_LineEdit_MenuItems>` **MENU_UNDO** = ``5``

Undoes the previous action.

.. _class_LineEdit_constant_MENU_REDO:

.. rst-class:: classref-enumeration-constant

:ref:`MenuItems<enum_LineEdit_MenuItems>` **MENU_REDO** = ``6``

Reverse the last undo action.

.. _class_LineEdit_constant_MENU_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`MenuItems<enum_LineEdit_MenuItems>` **MENU_MAX** = ``7``

Represents the size of the :ref:`MenuItems<enum_LineEdit_MenuItems>` enum.

.. rst-class:: classref-item-separator

----

.. _enum_LineEdit_VirtualKeyboardType:

.. rst-class:: classref-enumeration

enum **VirtualKeyboardType**:

.. _class_LineEdit_constant_KEYBOARD_TYPE_DEFAULT:

.. rst-class:: classref-enumeration-constant

:ref:`VirtualKeyboardType<enum_LineEdit_VirtualKeyboardType>` **KEYBOARD_TYPE_DEFAULT** = ``0``

Default text virtual keyboard.

.. _class_LineEdit_constant_KEYBOARD_TYPE_MULTILINE:

.. rst-class:: classref-enumeration-constant

:ref:`VirtualKeyboardType<enum_LineEdit_VirtualKeyboardType>` **KEYBOARD_TYPE_MULTILINE** = ``1``

Multiline virtual keyboard.

.. _class_LineEdit_constant_KEYBOARD_TYPE_NUMBER:

.. rst-class:: classref-enumeration-constant

:ref:`VirtualKeyboardType<enum_LineEdit_VirtualKeyboardType>` **KEYBOARD_TYPE_NUMBER** = ``2``

Virtual number keypad, useful for PIN entry.

.. _class_LineEdit_constant_KEYBOARD_TYPE_NUMBER_DECIMAL:

.. rst-class:: classref-enumeration-constant

:ref:`VirtualKeyboardType<enum_LineEdit_VirtualKeyboardType>` **KEYBOARD_TYPE_NUMBER_DECIMAL** = ``3``

Virtual number keypad, useful for entering fractional numbers.

.. _class_LineEdit_constant_KEYBOARD_TYPE_PHONE:

.. rst-class:: classref-enumeration-constant

:ref:`VirtualKeyboardType<enum_LineEdit_VirtualKeyboardType>` **KEYBOARD_TYPE_PHONE** = ``4``

Virtual phone number keypad.

.. _class_LineEdit_constant_KEYBOARD_TYPE_EMAIL_ADDRESS:

.. rst-class:: classref-enumeration-constant

:ref:`VirtualKeyboardType<enum_LineEdit_VirtualKeyboardType>` **KEYBOARD_TYPE_EMAIL_ADDRESS** = ``5``

Virtual keyboard with additional keys to assist with typing email addresses.

.. _class_LineEdit_constant_KEYBOARD_TYPE_PASSWORD:

.. rst-class:: classref-enumeration-constant

:ref:`VirtualKeyboardType<enum_LineEdit_VirtualKeyboardType>` **KEYBOARD_TYPE_PASSWORD** = ``6``

Virtual keyboard for entering a password. On most platforms, this should disable autocomplete and autocapitalization.

\ **Note:** This is not supported on HTML5 or below iOS version 11.0. Instead, this will behave identically to :ref:`KEYBOARD_TYPE_DEFAULT<class_LineEdit_constant_KEYBOARD_TYPE_DEFAULT>`.

.. _class_LineEdit_constant_KEYBOARD_TYPE_URL:

.. rst-class:: classref-enumeration-constant

:ref:`VirtualKeyboardType<enum_LineEdit_VirtualKeyboardType>` **KEYBOARD_TYPE_URL** = ``7``

Virtual keyboard with additional keys to assist with typing URLs.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_LineEdit_property_align:

.. rst-class:: classref-property

:ref:`Align<enum_LineEdit_Align>` **align** = ``0``

.. rst-class:: classref-property-setget

- void **set_align** **(** :ref:`Align<enum_LineEdit_Align>` value **)**
- :ref:`Align<enum_LineEdit_Align>` **get_align** **(** **)**

Text alignment as defined in the :ref:`Align<enum_LineEdit_Align>` enum.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_property_caret_blink:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **caret_blink** = ``false``

.. rst-class:: classref-property-setget

- void **cursor_set_blink_enabled** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **cursor_get_blink_enabled** **(** **)**

If ``true``, the caret (visual cursor) blinks.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_property_caret_blink_speed:

.. rst-class:: classref-property

:ref:`float<class_float>` **caret_blink_speed** = ``0.65``

.. rst-class:: classref-property-setget

- void **cursor_set_blink_speed** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **cursor_get_blink_speed** **(** **)**

Duration (in seconds) of a caret's blinking cycle.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_property_caret_position:

.. rst-class:: classref-property

:ref:`int<class_int>` **caret_position** = ``0``

.. rst-class:: classref-property-setget

- void **set_cursor_position** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_cursor_position** **(** **)**

The cursor's position inside the **LineEdit**. When set, the text may scroll to accommodate it.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_property_clear_button_enabled:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **clear_button_enabled** = ``false``

.. rst-class:: classref-property-setget

- void **set_clear_button_enabled** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_clear_button_enabled** **(** **)**

If ``true``, the **LineEdit** will show a clear button if ``text`` is not empty, which can be used to clear the text quickly.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_property_context_menu_enabled:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **context_menu_enabled** = ``true``

.. rst-class:: classref-property-setget

- void **set_context_menu_enabled** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_context_menu_enabled** **(** **)**

If ``true``, the context menu will appear when right-clicked.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_property_deselect_on_focus_loss_enabled:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **deselect_on_focus_loss_enabled** = ``true``

.. rst-class:: classref-property-setget

- void **set_deselect_on_focus_loss_enabled** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_deselect_on_focus_loss_enabled** **(** **)**

If ``true``, the selected text will be deselected when focus is lost.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_property_editable:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **editable** = ``true``

.. rst-class:: classref-property-setget

- void **set_editable** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_editable** **(** **)**

If ``false``, existing text cannot be modified and new text cannot be added.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_property_expand_to_text_length:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **expand_to_text_length** = ``false``

.. rst-class:: classref-property-setget

- void **set_expand_to_text_length** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_expand_to_text_length** **(** **)**

If ``true``, the **LineEdit** width will increase to stay longer than the :ref:`text<class_LineEdit_property_text>`. It will **not** compress if the :ref:`text<class_LineEdit_property_text>` is shortened.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_property_max_length:

.. rst-class:: classref-property

:ref:`int<class_int>` **max_length** = ``0``

.. rst-class:: classref-property-setget

- void **set_max_length** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_max_length** **(** **)**

Maximum amount of characters that can be entered inside the **LineEdit**. If ``0``, there is no limit.

When a limit is defined, characters that would exceed :ref:`max_length<class_LineEdit_property_max_length>` are truncated. This happens both for existing :ref:`text<class_LineEdit_property_text>` contents when setting the max length, or for new text inserted in the **LineEdit**, including pasting. If any input text is truncated, the :ref:`text_change_rejected<class_LineEdit_signal_text_change_rejected>` signal is emitted with the truncated substring as parameter.

\ **Example:**\ 

::

    text = "Hello world"
    max_length = 5
    # `text` becomes "Hello".
    max_length = 10
    text += " goodbye"
    # `text` becomes "Hello good".
    # `text_change_rejected` is emitted with "bye" as parameter.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_property_middle_mouse_paste_enabled:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **middle_mouse_paste_enabled** = ``true``

.. rst-class:: classref-property-setget

- void **set_middle_mouse_paste_enabled** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_middle_mouse_paste_enabled** **(** **)**

If ``false``, using middle mouse button to paste clipboard will be disabled.

\ **Note:** This method is only implemented on Linux.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_property_placeholder_alpha:

.. rst-class:: classref-property

:ref:`float<class_float>` **placeholder_alpha** = ``0.6``

.. rst-class:: classref-property-setget

- void **set_placeholder_alpha** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_placeholder_alpha** **(** **)**

Opacity of the :ref:`placeholder_text<class_LineEdit_property_placeholder_text>`. From ``0`` to ``1``.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_property_placeholder_text:

.. rst-class:: classref-property

:ref:`String<class_String>` **placeholder_text** = ``""``

.. rst-class:: classref-property-setget

- void **set_placeholder** **(** :ref:`String<class_String>` value **)**
- :ref:`String<class_String>` **get_placeholder** **(** **)**

Text shown when the **LineEdit** is empty. It is **not** the **LineEdit**'s default value (see :ref:`text<class_LineEdit_property_text>`).

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_property_right_icon:

.. rst-class:: classref-property

:ref:`Texture<class_Texture>` **right_icon**

.. rst-class:: classref-property-setget

- void **set_right_icon** **(** :ref:`Texture<class_Texture>` value **)**
- :ref:`Texture<class_Texture>` **get_right_icon** **(** **)**

Sets the icon that will appear in the right end of the **LineEdit** if there's no :ref:`text<class_LineEdit_property_text>`, or always, if :ref:`clear_button_enabled<class_LineEdit_property_clear_button_enabled>` is set to ``false``.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_property_secret:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **secret** = ``false``

.. rst-class:: classref-property-setget

- void **set_secret** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_secret** **(** **)**

If ``true``, every character is replaced with the secret character (see :ref:`secret_character<class_LineEdit_property_secret_character>`).

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_property_secret_character:

.. rst-class:: classref-property

:ref:`String<class_String>` **secret_character** = ``"*"``

.. rst-class:: classref-property-setget

- void **set_secret_character** **(** :ref:`String<class_String>` value **)**
- :ref:`String<class_String>` **get_secret_character** **(** **)**

The character to use to mask secret input (defaults to "\*"). Only a single character can be used as the secret character.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_property_selecting_enabled:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **selecting_enabled** = ``true``

.. rst-class:: classref-property-setget

- void **set_selecting_enabled** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_selecting_enabled** **(** **)**

If ``false``, it's impossible to select the text using mouse nor keyboard.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_property_shortcut_keys_enabled:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **shortcut_keys_enabled** = ``true``

.. rst-class:: classref-property-setget

- void **set_shortcut_keys_enabled** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_shortcut_keys_enabled** **(** **)**

If ``false``, using shortcuts will be disabled.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_property_text:

.. rst-class:: classref-property

:ref:`String<class_String>` **text** = ``""``

.. rst-class:: classref-property-setget

- void **set_text** **(** :ref:`String<class_String>` value **)**
- :ref:`String<class_String>` **get_text** **(** **)**

String value of the **LineEdit**.

\ **Note:** Changing text using this property won't emit the :ref:`text_changed<class_LineEdit_signal_text_changed>` signal.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_property_virtual_keyboard_enabled:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **virtual_keyboard_enabled** = ``true``

.. rst-class:: classref-property-setget

- void **set_virtual_keyboard_enabled** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_virtual_keyboard_enabled** **(** **)**

If ``true``, the native virtual keyboard is shown when focused on platforms that support it.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_property_virtual_keyboard_type:

.. rst-class:: classref-property

:ref:`VirtualKeyboardType<enum_LineEdit_VirtualKeyboardType>` **virtual_keyboard_type** = ``0``

.. rst-class:: classref-property-setget

- void **set_virtual_keyboard_type** **(** :ref:`VirtualKeyboardType<enum_LineEdit_VirtualKeyboardType>` value **)**
- :ref:`VirtualKeyboardType<enum_LineEdit_VirtualKeyboardType>` **get_virtual_keyboard_type** **(** **)**

Specifies the type of virtual keyboard to show.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_LineEdit_method_append_at_cursor:

.. rst-class:: classref-method

void **append_at_cursor** **(** :ref:`String<class_String>` text **)**

Adds ``text`` after the cursor. If the resulting value is longer than :ref:`max_length<class_LineEdit_property_max_length>`, nothing happens.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_method_clear:

.. rst-class:: classref-method

void **clear** **(** **)**

Erases the **LineEdit**'s :ref:`text<class_LineEdit_property_text>`.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_method_delete_char_at_cursor:

.. rst-class:: classref-method

void **delete_char_at_cursor** **(** **)**

Deletes one character at the cursor's current position (equivalent to pressing the ``Delete`` key).

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_method_delete_text:

.. rst-class:: classref-method

void **delete_text** **(** :ref:`int<class_int>` from_column, :ref:`int<class_int>` to_column **)**

Deletes a section of the :ref:`text<class_LineEdit_property_text>` going from position ``from_column`` to ``to_column``. Both parameters should be within the text's length.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_method_deselect:

.. rst-class:: classref-method

void **deselect** **(** **)**

Clears the current selection.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_method_get_menu:

.. rst-class:: classref-method

:ref:`PopupMenu<class_PopupMenu>` **get_menu** **(** **)** |const|

Returns the :ref:`PopupMenu<class_PopupMenu>` of this **LineEdit**. By default, this menu is displayed when right-clicking on the **LineEdit**.

\ **Warning:** This is a required internal node, removing and freeing it may cause a crash. If you wish to hide it or any of its children, use their :ref:`CanvasItem.visible<class_CanvasItem_property_visible>` property.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_method_get_scroll_offset:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_scroll_offset** **(** **)** |const|

Returns the scroll offset due to :ref:`caret_position<class_LineEdit_property_caret_position>`, as a number of characters.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_method_get_selection_from_column:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_selection_from_column** **(** **)** |const|

Returns the selection begin column.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_method_get_selection_to_column:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_selection_to_column** **(** **)** |const|

Returns the selection end column.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_method_has_selection:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **has_selection** **(** **)** |const|

Returns ``true`` if the user has selected text.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_method_menu_option:

.. rst-class:: classref-method

void **menu_option** **(** :ref:`int<class_int>` option **)**

Executes a given action as defined in the :ref:`MenuItems<enum_LineEdit_MenuItems>` enum.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_method_select:

.. rst-class:: classref-method

void **select** **(** :ref:`int<class_int>` from=0, :ref:`int<class_int>` to=-1 **)**

Selects characters inside **LineEdit** between ``from`` and ``to``. By default, ``from`` is at the beginning and ``to`` at the end.

::

    text = "Welcome"
    select() # Will select "Welcome".
    select(4) # Will select "ome".
    select(2, 5) # Will select "lco".

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_method_select_all:

.. rst-class:: classref-method

void **select_all** **(** **)**

Selects the whole :ref:`String<class_String>`.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Theme Property Descriptions
---------------------------

.. _class_LineEdit_theme_color_clear_button_color:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **clear_button_color** = ``Color( 0.88, 0.88, 0.88, 1 )``

Color used as default tint for the clear button.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_theme_color_clear_button_color_pressed:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **clear_button_color_pressed** = ``Color( 1, 1, 1, 1 )``

Color used for the clear button when it's pressed.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_theme_color_cursor_color:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **cursor_color** = ``Color( 0.94, 0.94, 0.94, 1 )``

Color of the **LineEdit**'s visual cursor (caret).

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_theme_color_font_color:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **font_color** = ``Color( 0.88, 0.88, 0.88, 1 )``

Default font color.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_theme_color_font_color_selected:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **font_color_selected** = ``Color( 0, 0, 0, 1 )``

Font color for selected text (inside the selection rectangle).

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_theme_color_font_color_uneditable:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **font_color_uneditable** = ``Color( 0.88, 0.88, 0.88, 0.5 )``

Font color when editing is disabled.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_theme_color_selection_color:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **selection_color** = ``Color( 0.49, 0.49, 0.49, 1 )``

Color of the selection rectangle.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_theme_constant_minimum_spaces:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **minimum_spaces** = ``12``

Minimum horizontal space for the text (not counting the clear button and content margins). This value is measured in count of space characters (i.e. this amount of space characters can be displayed without scrolling).

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_theme_font_font:

.. rst-class:: classref-themeproperty

:ref:`Font<class_Font>` **font**

Font used for the text.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_theme_icon_clear:

.. rst-class:: classref-themeproperty

:ref:`Texture<class_Texture>` **clear**

Texture for the clear button. See :ref:`clear_button_enabled<class_LineEdit_property_clear_button_enabled>`.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_theme_style_focus:

.. rst-class:: classref-themeproperty

:ref:`StyleBox<class_StyleBox>` **focus**

Background used when **LineEdit** has GUI focus.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_theme_style_normal:

.. rst-class:: classref-themeproperty

:ref:`StyleBox<class_StyleBox>` **normal**

Default background for the **LineEdit**.

.. rst-class:: classref-item-separator

----

.. _class_LineEdit_theme_style_read_only:

.. rst-class:: classref-themeproperty

:ref:`StyleBox<class_StyleBox>` **read_only**

Background used when **LineEdit** is in read-only mode (:ref:`editable<class_LineEdit_property_editable>` is set to ``false``).

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
