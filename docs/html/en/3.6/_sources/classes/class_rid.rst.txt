:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Redot engine sources.
.. Generator: https://github.com/redot-engine/redot/tree/3.6/doc/tools/make_rst.py.
.. XML source: https://github.com/redot-engine/redot/tree/3.6/doc/classes/RID.xml.

.. _class_RID:

RID
===

Handle for a :ref:`Resource<class_Resource>`'s unique ID.

.. rst-class:: classref-introduction-group

Description
-----------

The RID type is used to access the unique integer ID of a resource. They are opaque, which means they do not grant access to the associated resource by themselves. They are used by and with the low-level Server classes such as :ref:`VisualServer<class_VisualServer>`.

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-----------------------+-------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>` | :ref:`RID<class_RID_method_RID>` **(** :ref:`Object<class_Object>` from **)** |
   +-----------------------+-------------------------------------------------------------------------------+
   | :ref:`int<class_int>` | :ref:`get_id<class_RID_method_get_id>` **(** **)**                            |
   +-----------------------+-------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_RID_method_RID:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **RID** **(** :ref:`Object<class_Object>` from **)**

Creates a new RID instance with the ID of a given resource. When not handed a valid resource, silently stores the unused ID 0.

.. rst-class:: classref-item-separator

----

.. _class_RID_method_get_id:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_id** **(** **)**

Returns the ID of the referenced resource.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
